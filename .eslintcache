[{"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\index.tsx":"1","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\reportWebVitals.ts":"2","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\Store.ts":"3","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\App.tsx":"4","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\rootReducer.ts":"5","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\FirebaseApp.ts":"6","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\ProtectedRoutes.tsx":"7","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\Login.tsx":"8","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\firebaseConfig.ts":"9","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\isLoading\\reducers.ts":"10","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\sensors\\reducers.ts":"11","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\alertHistory\\reducers.ts":"12","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\Settings.tsx":"13","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\AlertHistory.tsx":"14","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\Header.tsx":"15","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\DashBoard.tsx":"16","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\PageNotFound.tsx":"17","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\Members.tsx":"18","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\services\\auth\\auth.ts":"19","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\data-fetch\\RestAPITest.ts":"20","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\repositories\\alertHistoryRepository.ts":"21","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\repositories\\sensorRepository.ts":"22","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\Sensor.tsx":"23","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\SensorForm.tsx":"24","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\CostomLine.tsx":"25","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\isLoading\\actions.ts":"26","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\services\\RestHTTP.ts":"27","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\data-fetch\\env.ts":"28","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\alertHistory\\actions.ts":"29","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\sensors\\actions.ts":"30","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\common\\LoadingScreen.tsx":"31"},{"size":800,"mtime":1609415917699,"results":"32","hashOfConfig":"33"},{"size":440,"mtime":1609415871365,"results":"34","hashOfConfig":"33"},{"size":365,"mtime":1609415917701,"results":"35","hashOfConfig":"33"},{"size":1494,"mtime":1609419004587,"results":"36","hashOfConfig":"33"},{"size":389,"mtime":1609415917704,"results":"37","hashOfConfig":"33"},{"size":184,"mtime":1609415917693,"results":"38","hashOfConfig":"33"},{"size":1552,"mtime":1609415917696,"results":"39","hashOfConfig":"33"},{"size":5567,"mtime":1609418759883,"results":"40","hashOfConfig":"33"},{"size":329,"mtime":1609415917699,"results":"41","hashOfConfig":"33"},{"size":342,"mtime":1609415917704,"results":"42","hashOfConfig":"33"},{"size":1165,"mtime":1609415917705,"results":"43","hashOfConfig":"33"},{"size":296,"mtime":1609415917702,"results":"44","hashOfConfig":"33"},{"size":4025,"mtime":1609421680577,"results":"45","hashOfConfig":"33"},{"size":9025,"mtime":1609415917696,"results":"46","hashOfConfig":"33"},{"size":1413,"mtime":1609415917695,"results":"47","hashOfConfig":"33"},{"size":9652,"mtime":1609415917697,"results":"48","hashOfConfig":"33"},{"size":692,"mtime":1609415917698,"results":"49","hashOfConfig":"33"},{"size":4436,"mtime":1609421452475,"results":"50","hashOfConfig":"33"},{"size":1103,"mtime":1609418432971,"results":"51","hashOfConfig":"33"},{"size":2441,"mtime":1609415871364,"results":"52","hashOfConfig":"33"},{"size":540,"mtime":1609415917699,"results":"53","hashOfConfig":"33"},{"size":1762,"mtime":1609415917700,"results":"54","hashOfConfig":"33"},{"size":2145,"mtime":1609415871357,"results":"55","hashOfConfig":"33"},{"size":6852,"mtime":1609415871358,"results":"56","hashOfConfig":"33"},{"size":1529,"mtime":1609415917695,"results":"57","hashOfConfig":"33"},{"size":138,"mtime":1609415917703,"results":"58","hashOfConfig":"33"},{"size":1005,"mtime":1609415917701,"results":"59","hashOfConfig":"33"},{"size":70,"mtime":1609415871364,"results":"60","hashOfConfig":"33"},{"size":103,"mtime":1609415917702,"results":"61","hashOfConfig":"33"},{"size":315,"mtime":1609415917704,"results":"62","hashOfConfig":"33"},{"size":781,"mtime":1609418849337,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"v504re",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\index.tsx",[],["138","139"],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\reportWebVitals.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\Store.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\App.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\rootReducer.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\FirebaseApp.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\ProtectedRoutes.tsx",["140","141","142","143"],"import React from 'react';\r\nimport {Route, Redirect, Link} from 'react-router-dom';\r\nimport {Switch} from 'react-router';\r\nimport Dashboard from \"./pages/DashBoard\";\r\nimport AlertHistory from \"./pages/AlertHistory\";\r\nimport Header from './Header';\r\nimport {Nav} from \"react-bootstrap\";\r\nimport Members from \"./pages/Members\";\r\nimport Settings from \"./pages/Settings\";\r\nimport PageNotFound from \"./pages/PageNotFound\";\r\n\r\nfunction ProtectedRoutes() {\r\n\r\n\r\n    return (\r\n        <div id=\"page-top\">\r\n            <Header/>\r\n            <div id=\"wrapper\" className=\"pt-5\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path={\"/dashboard\"}\r\n                        component={Dashboard}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path={'/alert-history'}\r\n                        component={AlertHistory}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path={'/members'}\r\n                        component={Members}/>\r\n                    <Route\r\n                        exact\r\n                        path={'/settings'}\r\n                        component={Settings}/>\r\n                    <Route\r\n                        path={\"/*\"}\r\n                        component={PageNotFound}/>\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoutes;\r\n\r\n{/* <Redirect\r\n                to={\"/dashboard\"}\r\n            /> */\r\n}\r\n","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\Login.tsx",["144"],"import React from \"react\";\r\nimport {userLogin} from \"../../services/auth/auth\";\r\nimport {withRouter, RouteProps} from 'react-router';\r\n\r\n\r\nclass Login extends React.Component<RouteProps,{[key:string]:any}>{\r\n    constructor(props:any) {\r\n        super(props);\r\n\r\n        this.state={\r\n            email:\"\",\r\n            password:\"\",\r\n            stayLogged:false\r\n        }\r\n    }\r\n\r\n    handleOnSubmit = async (event: { preventDefault: () => void; }) => {\r\n        event.preventDefault();\r\n        try {\r\n            console.log(\"login\")\r\n            await userLogin(this.state.email, this.state.password, this.state.stayLogged)\r\n        } catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div className=\"bg-gradient-primary\" style={{background:\" rgb(255,145,77)\"}}>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div\r\n                        className=\"col-md-9 col-lg-12 col-xl-10 d-flex flex-column justify-content-center align-content-center align-self-center\">\r\n                        <div className=\"card shadow-lg o-hidden border-0 my-5\" style={{marginTop:\"60px\"}}>\r\n                            <div className=\"card-body p-0\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-6 col-xl-6 d-none d-lg-flex\">\r\n                                        <div className=\"flex-grow-1 bg-login-image\"\r\n                                             style={{background:\"url(/assets/img/dogs/Monitor.png) center\"}}/>\r\n                                    </div>\r\n                                    <div className=\"col-lg-6\">\r\n                                        <div className=\"p-5\">\r\n                                            <div className=\"text-center\">\r\n                                                <h4 className=\"text-dark mb-4\">Welcome Back!</h4>\r\n                                            </div>\r\n                                            <form className=\"user\" onSubmit={(e)=>this.handleOnSubmit(e)}>\r\n                                                <div className=\"form-group\"><input\r\n                                                    className=\"form-control form-control-user\" type=\"email\"\r\n                                                    id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"\r\n                                                    placeholder=\"Enter Email Address...\" name=\"email\"\r\n                                                    value={this.state.email}\r\n                                                    onChange={\r\n                                                        (event)=>this.setState({email:event.target.value})\r\n                                                    }\r\n                                                /></div>\r\n                                                <div className=\"form-group\"><input\r\n                                                    className=\"form-control form-control-user\" type=\"password\"\r\n                                                    id=\"exampleInputPassword\" placeholder=\"Password\" name=\"password\"\r\n                                                    value={this.state.password}\r\n                                                    onChange={(event)=>this.setState({password:event.target.value})}\r\n                                                />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"custom-control custom-checkbox small\">\r\n                                                        <div className=\"form-check\"><input\r\n                                                            className=\"form-check-input custom-control-input\"\r\n                                                            type=\"checkbox\" id=\"formCheck-1\"\r\n                                                                onChange={()=>this.setState({stayLogged:!this.state.stayLogged})}\r\n                                                        /><label\r\n                                                            className=\"form-check-label custom-control-label\"\r\n                                                            htmlFor=\"formCheck-1\">Remember Me</label></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <button className=\"btn btn-primary btn-block text-white btn-user\"\r\n                                                        type=\"submit\" style={{background:\" rgb(255,145,77)\"}}>Login\r\n                                                </button>\r\n                                                <hr/>\r\n                                                    <hr/>\r\n                                            </form>\r\n                                            <div className=\"text-center\"><a className=\"small\"\r\n                                                                            href=\"forgot-password.html\">Forgot\r\n                                                Password?</a></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </div>;\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\firebaseConfig.ts",["145"],"export default {\r\n    apiKey: \"AIzaSyD7p4qs_W25Dnu7XUj354SObDrFBNagabY\",\r\n    authDomain: \"seng22212-assignment-1.firebaseapp.com\",\r\n    projectId: \"seng22212-assignment-1\",\r\n    storageBucket: \"seng22212-assignment-1.appspot.com\",\r\n    messagingSenderId: \"77647971611\",\r\n    appId: \"1:77647971611:web:8b34537460983f39867fbe\"\r\n};","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\isLoading\\reducers.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\sensors\\reducers.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\alertHistory\\reducers.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\Settings.tsx",["146"],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\AlertHistory.tsx",["147","148","149","150","151","152","153","154","155"],"import React from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { getAlertHistory } from \"../../repositories/alertHistoryRepository\";\r\n\r\n\r\nclass AlertHistory extends React.Component<any, {[key:string]:any}> {\r\n\r\n    constructor(props: {}| Readonly<{}>) {\r\n        super(props);\r\n    }\r\n\r\n    getAlertHistory =async () => {\r\n        const alertHistory = await getAlertHistory();\r\n        this.props.getAlertHistory();\r\n    }\r\n\r\n    onSensorCategoryChange =async (event: any) => {\r\n        try{\r\n            const category:any = this.props.sensorCategories.filter((cat:any)=>cat.type==event);\r\n            await this.props.getSensors(category[0]);\r\n        }catch (e) {\r\n            alert(e);\r\n        }\r\n    }\r\n\r\n    fetchSensorData = (from:any, to:any, sensor:any) => {\r\n        if(sensor!=null) {\r\n            this.props.getSensorData(sensor, from, to);\r\n        }\r\n    }\r\n\r\n    onSensorChange = (event: any ) => {\r\n        const sensor:any = this.props.sensors.filter((sen:any)=>sen.id==event);\r\n        this.fetchSensorData(this.props.from, this.props.to,sensor[0]);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAlertHistory();\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div className=\"d-flex flex-column\" id=\"content-wrapper\">\r\n                    <div id=\"content\">\r\n                        <div className=\"container-fluid\" style={{paddingTop: \"30px\"}}>\r\n                            <h3 className=\"text-dark mb-4\">Alert History</h3>\r\n                            <div className=\"card shadow\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\" style={{marginBottom: \"30px\"}}>\r\n                                        <div className=\"col\" style={{marginRight: \"10px\"}}>\r\n                                            <Dropdown onSelect={(event:any)=>this.onSensorCategoryChange(event)}>\r\n                                                <Dropdown.Toggle id=\"dropdown-basic\">\r\n                                                    {this.props.selectedCategory?this.props.selectedCategory.title:\"Select Category\"}\r\n\r\n                                                </Dropdown.Toggle>\r\n\r\n                                                <Dropdown.Menu>\r\n                                                    {this.props.sensorCategories.map((category:any, index:number) => {\r\n                                                        return <Dropdown.Item key={category.type} eventKey={category.type}>{category.title}</Dropdown.Item>\r\n                                                    })}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </div>\r\n\r\n                                        <div className=\"col\" style={{marginRight: \"10px\"}}>\r\n                                            <Dropdown onSelect={(eventKey:any, e)=>this.onSensorChange(eventKey)}>\r\n                                                <Dropdown.Toggle id=\"dropdown-basic\">\r\n                                                    {this.props.selectedSensor?this.props.selectedSensor.title:\"Select Sensor\"}\r\n                                                </Dropdown.Toggle>\r\n\r\n                                                <Dropdown.Menu>\r\n                                                    {this.props.sensors.map((sensor:any, index:number)=>{\r\n                                                        return <Dropdown.Item key={sensor.id} eventKey={sensor.id}>{sensor.title}</Dropdown.Item>\r\n                                                    })}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"table-responsive table mt-2\" id=\"dataTable\" role=\"grid\" aria-describedby=\"dataTable_info\">\r\n                                        <table className=\"table my-0\" id=\"dataTable\">\r\n                                            <thead>\r\n                                            <tr>\r\n                                                <th>Id</th>\r\n                                                <th>Date&nbsp;</th>\r\n                                                <th>Cause</th>\r\n                                                <th>Threshold</th>\r\n                                                <th>Value</th>\r\n                                            </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.props.alertHistory.map((alert:any, index:number)=>{\r\n                                                    return (\r\n                                                        <tr key={index}>\r\n                                                            <td>{alert.id}</td>\r\n                                                            <td>{alert.sensorData.capturedDate}</td>\r\n                                                            <td>{alert.cause}</td>\r\n                                                            <td>{alert.sensorData.threshold}</td>\r\n                                                            <td>{alert.sensorData.dataValue}</td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n                                                <tr></tr>\r\n                                            </tbody>\r\n                                            <tfoot>\r\n                                            <tr>\r\n                                                <td><strong>Id</strong></td>\r\n                                                <td><strong>Date</strong></td>\r\n                                                <td><strong>Cause</strong></td>\r\n                                                <td><strong>Threshold</strong></td>\r\n                                                <td><strong>Value</strong></td>\r\n                                            </tr>\r\n                                            </tfoot>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6 align-self-center\">\r\n                                            <p id=\"dataTable_info\" className=\"dataTables_info\" role=\"status\" aria-live=\"polite\">Showing 1 to 10 of 27</p>\r\n                                        </div>\r\n                                        <div className=\"col-md-6\">\r\n                                            <nav className=\"d-lg-flex justify-content-lg-end dataTables_paginate paging_simple_numbers\">\r\n                                                <ul className=\"pagination\">\r\n                                                    <li className=\"page-item disabled\"><a className=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                                                        <span aria-hidden=\"true\">«</span></a></li>\r\n                                                    <li className=\"page-item active\"><a className=\"page-link\" href=\"#\">1</a></li>\r\n                                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\r\n                                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\r\n                                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                                                        <span aria-hidden=\"true\">»</span></a></li>\r\n                                                </ul>\r\n                                            </nav>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <footer className=\"bg-white sticky-footer\">\r\n                        <div className=\"container my-auto\">\r\n                            <div className=\"text-center my-auto copyright\"><span>Copyright © Monitor 2020</span></div>\r\n                        </div>\r\n                    </footer>\r\n                </div>;\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state : any) => ({\r\n    alertHistory: state.alertHistory\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAlertHistory})(AlertHistory);\r\n\r\n/* const AlertHistory: React.FC = () => {\r\n    document.title = 'weatherApp | alert history'\r\n    return (\r\n        <div className='min-vh-100'>\r\n            <br/><br/>\r\n            <h2 className='pt-4'>Alert History</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlertHistory; */\r\n","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\Header.tsx",["156","157"],"import React from 'react';\r\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header: React.FC = () => {\r\n    const sensorCategories = JSON.parse(localStorage.getItem(\"SensorCategories\") as string) || '';\r\n    console.log(sensorCategories)\r\n    const dropdown: string =  \"Temperature\";\r\n\r\n\r\n    return (\r\n  <React.Fragment>\r\n      <Navbar className='p-header-area' collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" style={{position:'fixed', width: '100%'}}>\r\n          <Navbar.Brand><Link to='/' className='links'>Monitor</Link></Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n\r\n                  <Nav.Link><Link to='/about' className='links'>About</Link></Nav.Link>\r\n                  <Nav.Link><Link to='/alert-history' className='links'>Alert History</Link></Nav.Link>\r\n                  <Nav.Link><Link to='/dashboard' className='links'>Dashboard</Link></Nav.Link>\r\n                  <Nav.Link><Link to='/members'className='links'>Members</Link></Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                  <Nav.Link><Link to='/settings'className='links'>Settings</Link></Nav.Link>\r\n              </Nav>\r\n          </Navbar.Collapse>\r\n      </Navbar>\r\n  </React.Fragment>\r\n );}\r\n\r\nexport default Header;\r\n","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\DashBoard.tsx",["158","159","160","161","162","163","164","165","166"],"import React from \"react\";\r\nimport {signOutUser} from \"../../services/auth/auth\";\r\nimport index, {Line} from \"react-chartjs-2\";\r\nimport {Dropdown, DropdownButton} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {getSensorCategories, getSensorData, getSensors} from \"../../repositories/sensorRepository\";\r\nimport CustomLine from \"../CostomLine\";\r\n\r\nclass Dashboard extends React.Component<any,{[key:string]:any}>{\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n    onSensorCategoryChange = (event: any) => {\r\n        const category:any = this.props.sensorCategories.filter((cat:any)=>cat.type==event);\r\n        this.props.getSensors(category[0]);\r\n    }\r\n\r\n    onSensorChange = (event: any ) => {\r\n        const sensor:any = this.props.sensors.filter((sen:any)=>sen.id==event);\r\n        console.log(sensor[0]);\r\n        this.fetchSensorData(this.props.from, this.props.to,sensor[0]);\r\n\r\n    }\r\n\r\n    fetchSensorData = (from:any, to:any, sensor:any) => {\r\n        if(sensor!=null) {\r\n            this.props.getSensorData(sensor, from, to);\r\n        }\r\n    }\r\n\r\n    onFromDateChange = (event: any) => {\r\n        this.fetchSensorData(event.target.value, this.props.to, this.props.selectedSensor);\r\n\r\n\r\n    }\r\n\r\n    onToDateChange = (event: any) => {\r\n        this.fetchSensorData(this.props.from,event.target.value,this.props.selectedSensor);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.sensorCategories.length==0){\r\n            this.props.getSensorCategories();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div className=\"d-flex flex-column\" id=\"content-wrapper\">\r\n            <div id=\"content\">\r\n                <div className=\"container-fluid\" style={{marginTop: \"20px\"}}>\r\n                    <div className=\"d-sm-flex justify-content-between align-items-center mb-4\">\r\n                        <h3 className=\"text-dark mb-0\">Dashboard</h3><a\r\n                        className=\"btn btn-primary btn-sm d-none d-sm-inline-block\" role=\"button\" href=\"#\"><i\r\n                        className=\"fas fa-download fa-sm text-white-50\"></i>&nbsp;Generate Report</a>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 col-xl-12\">\r\n                            <div className=\"card shadow mb-4\">\r\n                                <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <h6 className=\"text-primary font-weight-bold m-0\">{this.props.selectedCategory?this.props.selectedCategory.title:\"Select Sensor Category\"}</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\" style={{marginBottom: \"30px\"}}>\r\n                                        <div className=\"col\" style={{marginRight: \"10px\"}}>\r\n                                            <Dropdown onSelect={(event:any)=>this.onSensorCategoryChange(event)}>\r\n                                                <Dropdown.Toggle id=\"dropdown-basic\">\r\n                                                    {this.props.selectedCategory?this.props.selectedCategory.title:\"Select Category\"}\r\n\r\n                                                </Dropdown.Toggle>\r\n\r\n                                                <Dropdown.Menu>\r\n                                                    {this.props.sensorCategories.map((category:any, index:number) => {\r\n                                                        return <Dropdown.Item key={category.type} eventKey={category.type}>{category.title}</Dropdown.Item>\r\n                                                    })}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                        <div className=\"col\" style={{marginRight: \"10px\"}}>\r\n                                            <Dropdown onSelect={(eventKey:any, e)=>this.onSensorChange(eventKey)}>\r\n                                                <Dropdown.Toggle id=\"dropdown-basic\">\r\n                                                    {this.props.selectedSensor?this.props.selectedSensor.title:\"Select Sensor\"}\r\n                                                </Dropdown.Toggle>\r\n\r\n                                                <Dropdown.Menu>\r\n                                                    {this.props.sensors.map((sensor:any, index:number)=>{\r\n                                                        return <Dropdown.Item key={sensor.id} eventKey={sensor.id}>{sensor.title}</Dropdown.Item>\r\n                                                    })}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                        <div className=\"col\"\r\n                                             style={{marginRight: \"10px\", height: \"38px\",paddingTop:\" 5px\",paddingLeft: \"24px\"}}>\r\n                                            <strong>From&nbsp;</strong><input type=\"date\"\r\n                                                                              value={this.props.from}\r\n                                                                              max={this.props.to}\r\n                                                                              onChange={(e)=>this.onFromDateChange(e)}\r\n                                                                              style={{color: \"rgb(133,135,150)\",borderWidth: \"0px\",filter:\"brightness(100%) grayscale(0%) invert(0%)\"}}/>\r\n                                        </div>\r\n                                        <div className=\"col\"\r\n                                             style={{marginRight: \"10px\",paddingTop: \"5px\",paddingLeft:\"24px\"}}>\r\n                                            <strong>To&nbsp;&nbsp;</strong><input type=\"date\"\r\n                                                                                  value={this.props.to}\r\n                                                                                  onChange={(e)=>this.onToDateChange(e)}\r\n                                                                                  min={this.props.from}\r\n                                                                                  style={{color:\" rgb(133,135,150)\",borderWidth:\"0px\",filter:\" brightness(100%) grayscale(0%) invert(0%)\"}}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"chart-area mb-2\">\r\n                                        <CustomLine data={this.props.sensorData}/>\r\n                                        <canvas\r\n                                            data-bs-chart=\"{&quot;type&quot;:&quot;line&quot;,&quot;data&quot;:{&quot;labels&quot;:[&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;],&quot;datasets&quot;:[{&quot;label&quot;:&quot;Earnings&quot;,&quot;fill&quot;:true,&quot;data&quot;:[&quot;0&quot;,&quot;10000&quot;,&quot;5000&quot;,&quot;15000&quot;,&quot;10000&quot;,&quot;20000&quot;,&quot;15000&quot;,&quot;25000&quot;],&quot;backgroundColor&quot;:&quot;rgba(78, 115, 223, 0.05)&quot;,&quot;borderColor&quot;:&quot;rgba(78, 115, 223, 1)&quot;},{&quot;label&quot;:&quot;Threshold&quot;,&quot;fill&quot;:true,&quot;data&quot;:[&quot;2000&quot;,&quot;3000&quot;,&quot;8000&quot;,&quot;4500&quot;,&quot;6352&quot;,&quot;11000&quot;,&quot;50000&quot;,&quot;0&quot;,&quot;&quot;]}]},&quot;options&quot;:{&quot;maintainAspectRatio&quot;:false,&quot;legend&quot;:{&quot;display&quot;:false},&quot;title&quot;:{},&quot;scales&quot;:{&quot;xAxes&quot;:[{&quot;gridLines&quot;:{&quot;color&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;zeroLineColor&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;drawBorder&quot;:false,&quot;drawTicks&quot;:false,&quot;borderDash&quot;:[&quot;2&quot;],&quot;zeroLineBorderDash&quot;:[&quot;2&quot;],&quot;drawOnChartArea&quot;:false},&quot;ticks&quot;:{&quot;fontColor&quot;:&quot;#858796&quot;,&quot;padding&quot;:20}}],&quot;yAxes&quot;:[{&quot;gridLines&quot;:{&quot;color&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;zeroLineColor&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;drawBorder&quot;:false,&quot;drawTicks&quot;:false,&quot;borderDash&quot;:[&quot;2&quot;],&quot;zeroLineBorderDash&quot;:[&quot;2&quot;]},&quot;ticks&quot;:{&quot;fontColor&quot;:&quot;#858796&quot;,&quot;padding&quot;:20}}]}}}\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <footer className=\"bg-white sticky-footer\"></footer>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state : any) => ({\r\n    sensorCategories: state.sensors.categories,\r\n    sensors: state.sensors.sensors,\r\n    sensorData: state.sensors.sensorData,\r\n    from: state.sensors.from,\r\n    to:state.sensors.to,\r\n    selectedCategory:state.sensors.selectedCategory,\r\n    selectedSensor:state.sensors.selectedSensor\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{getSensorCategories, getSensors, getSensorData})(Dashboard);\r\n","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\PageNotFound.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\pages\\Members.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\services\\auth\\auth.ts",["167","168"],"import FirebaseApp from \"../../FirebaseApp\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {removeLoading, setLoading} from \"../../store/isLoading/actions\";\r\n\r\nexport const userLogin = async (email: string, password: string , stayLogged:boolean) => {\r\n    try{\r\n        if(stayLogged){\r\n            await FirebaseApp.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\r\n        }else{\r\n            await FirebaseApp.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n        }\r\n        return await FirebaseApp.auth().signInWithEmailAndPassword(email.replace(/\\s/g, '') , password.replace(/\\s/g, ''));\r\n    }catch (e){\r\n        throw e;\r\n    }\r\n}\r\n\r\nexport const signOutUser =  async () => {\r\n    try{\r\n        await FirebaseApp.auth().signOut();\r\n    }catch (e) {\r\n        throw e;\r\n    }\r\n}\r\n// export const getToken = async () => {\r\n//     return await FirebaseApp.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function(idToken) {\r\n//         return idToken;\r\n//     }).catch(function(error) {\r\n//         throw  error;\r\n//     });\r\n// }\r\n","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\data-fetch\\RestAPITest.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\repositories\\alertHistoryRepository.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\repositories\\sensorRepository.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\Sensor.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\SensorForm.tsx",["169"],"import React, {ChangeEvent, FormEvent, useState} from \"react\";\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport {ISensor,} from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\ntype UpdateSensorProps = {\r\n    sensor: ISensor;\r\n    formTitle: string;\r\n    setIsUpdatable: (arg: boolean) => void\r\n}\r\n\r\nconst SensorForm: React.FC<UpdateSensorProps> = (props) => {\r\n    const {sensor, formTitle} = props;\r\n    const [id, setId] = useState(sensor.id);\r\n    const [title, setTitle] = useState(sensor.title);\r\n    const [threshold, setThreshold] = useState(sensor.threshold);\r\n    const [type, setType] = useState(sensor.type);\r\n    const [unit, setUnit] = useState(sensor.unit)\r\n    const [validated, setValidated] = useState(false);\r\n    const sensorCategories = JSON.parse(localStorage.getItem(\"SensorCategories\") as string);\r\n\r\n    const handleUpdate = (event: FormEvent) => {\r\n        const form = event.currentTarget;\r\n        // @ts-ignore\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else if (title !== null && id !== null && title !== '' && id !== '') {\r\n            setValidated(false);\r\n            Swal.fire({\r\n                title: 'Do you want to save the changes?',\r\n                showDenyButton: true,\r\n                showCancelButton: true,\r\n                confirmButtonText: `Save`,\r\n                denyButtonText: `Don't save`,\r\n            }).then((result) => {\r\n                /* Read more about isConfirmed, isDenied below */\r\n                if (result.isConfirmed) {\r\n                    Swal.fire('Saved!', '', 'success');\r\n\r\n                    if (formTitle.split(' ')[0] === 'Add') {\r\n                        //TODO: add sensor function here.\r\n\r\n                    } else {\r\n                        //TODO: create sensor update function here\r\n                    }\r\n\r\n                    props.setIsUpdatable(false)\r\n                } else if (result.isDenied) {\r\n                    Swal.fire('Changes are not saved', '', 'info')\r\n                    props.setIsUpdatable(false)\r\n                }\r\n            })\r\n        } else {\r\n            setValidated(true);\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"my-4 p-3 \"\r\n             style={{maxWidth: '400px', border: '1px solid gray', margin: \"auto\", borderRadius: '10px'}}>\r\n            <Form.Row>\r\n                <Col className=\"pl-1 mb-3\">\r\n                    <strong style={{textDecoration: 'underline'}}>{formTitle}</strong>\r\n\r\n                    <i className='feather-x-circle text-dark float-right' onClick={() => props.setIsUpdatable(false)}/>\r\n                </Col>\r\n            </Form.Row>\r\n            <Form noValidate validated={validated}>\r\n\r\n                <Form.Row>\r\n                    <Form.Group className=\"form-group-dev\">\r\n                        <Form.Label className=\"text-left label-text\">Title of Sensor</Form.Label>\r\n                        <Form.Control required type=\"text\" className=\"form-input\" placeholder=\"\"\r\n                                      value={title ? title : ''}\r\n                                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setTitle(e.target.value)}/>\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group className=\"form-group-dev\">\r\n                        <Form.Label className=\" label-text \">Sensor Id</Form.Label>\r\n                        <Form.Control className=\"form-input\" required type=\"text\" placeholder=\"\" value={id ? id : ''}\r\n                                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setId(e.target.value)}/>\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group className=\"form-group-dev\">\r\n                        <Form.Label className=\"text-left label-text\">Threshold</Form.Label>\r\n                        <Row>\r\n                            <Col xs={8} sm={8}>\r\n                                <Form.Control className=\"form-input\" required type=\"range\" placeholder=\"\"\r\n                                              value={threshold ? threshold : ''}\r\n                                              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setThreshold(Number(e.target.value))}/>\r\n                            </Col>\r\n                            <Col xs={4} sm={4}>\r\n                                <Form.Control className=\"form-input\" required type=\"text\" placeholder=\"\"\r\n                                              value={threshold ? threshold : ''}\r\n                                              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setThreshold(Number(e.target.value))}/>\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Label className=\"text-left Sensor-label\">Sensor type</Form.Label>\r\n                    <Form.Group controlId=\"SensorSelectID\" className=\"form-group-dev\">\r\n                        <br/>\r\n                        <select name=\"sensors\" id=\"sensors\"\r\n                                onChange={(e: ChangeEvent<HTMLSelectElement>) => setType(e.target.value)}>\r\n                            {\r\n                                sensorCategories.map((sensorCategory: string, index:number) =>\r\n                                    <option key={index} value={sensorCategory}>{sensorCategory}</option>)}\r\n                        </select>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group className=\"form-group-dev\">\r\n                        <Form.Label className=\"text-left label-text\">Sensor unit</Form.Label>\r\n                        <Form.Control className=\"form-input\" required type=\"text\" placeholder=\"\"\r\n                                      value={unit ? unit : ''}\r\n                                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setUnit(e.target.value)}/>\r\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button onClick={event => handleUpdate(event)} size='sm' variant='success'\r\n                        style={{width: '100%', padding: '10px'}}>\r\n                    {formTitle.split(' ')[0]}\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\nexport default SensorForm;\r\n","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\CostomLine.tsx",["170"],"import React from \"react\";\r\nimport {Line} from \"react-chartjs-2\";\r\n\r\nfunction CustomLine(props:any){\r\n\r\n    const labels: any[]=[];\r\n    const dataSet: any[]=[];\r\n    const thresholdSet: any[]=[];\r\n\r\n    props.data.map((data: any, index:number)=>{\r\n        labels.push(new Date(data.capturedDate).toDateString().substr(4));\r\n        dataSet.push(data.dataValue);\r\n        thresholdSet.push(data.threshold);\r\n    })\r\n\r\n    const chartData = {\r\n        labels: labels,\r\n        datasets:[\r\n            {\r\n                label: \"Sensor Reading\",\r\n                data:dataSet,\r\n                fill:true,\r\n                borderColor:'#6200ff'\r\n            },\r\n            {\r\n                label: \"Threshold Value\",\r\n                data:thresholdSet,\r\n                fill:false,\r\n                borderColor:'#ff1a00'\r\n            }\r\n        ],\r\n        options:{\r\n            responsive:false,\r\n            maintainAspectRatio: false\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className='d-none d-md-block d-lg-none'><Line data={chartData} width={100} height={50}/></div>\r\n            <div className='d-none d-lg-block'><Line data={chartData} width={100} height={35}/></div>\r\n            <div className='d-none d-sm-block d-md-none'><Line data={chartData} width={100} height={70}/></div>\r\n            <div className='d-sm-none'><Line data={chartData} width={90} height={100}/></div>\r\n        </div>\r\n    )\r\n\r\n    // ) <Line data={chartData} height={35} width={100}/>\r\n}\r\n\r\nexport default CustomLine;\r\n","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\isLoading\\actions.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\services\\RestHTTP.ts",["171","172"],"import axios from \"axios\";\r\n\r\nconst host=\"https://api-server-t2h37jtwmq-uc.a.run.app/api\";\r\n\r\nexport default {\r\n\r\n    GET: async (endpoint:string, param:any) => {\r\n        return await axios.get(`${host}${endpoint}`,\r\n            {\r\n                params :param,\r\n                headers:{\r\n                    'Authorization': `Bearer `,\r\n                },\r\n            }\r\n        ).then( response => {\r\n            return response.data;\r\n        }).catch( error=> {\r\n            throw error;\r\n        }).catch(error => {\r\n            throw error;\r\n        })\r\n\r\n    },\r\n\r\n    POST: async (endpoint:string, data:any) => {\r\n        return await axios.post(`${host}${endpoint}`,\r\n            data,\r\n            {\r\n                headers: {\r\n                    'Authorization': `Bearer `,\r\n                    'Content-Type' : 'application/json'\r\n                },\r\n\r\n            }) .then((response) => {\r\n\r\n        })\r\n            .catch((e) => {\r\n                throw e\r\n            })\r\n    }\r\n\r\n}\r\n","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\data-fetch\\env.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\alertHistory\\actions.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\store\\sensors\\actions.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend-2\\src\\components\\common\\LoadingScreen.tsx",["173"],"import React from \"react\";\r\n\r\nconst LoadingScreen =  ()  => {\r\n\r\n    return<div id=\"content\" style={{background: \"#d95608\", position:\"absolute\",zIndex:2000, width:\"100%\"}}>\r\n                    <div className=\"container d-flex justify-content-center my-auto\" style={{marginTop:\" auto\"}}>\r\n                        <div className=\"d-flex flex-column justify-content-center align-items-center align-content-center align-self-center justify-content-xl-center align-items-xl-center\"\r\n    style={{height: \"100vh\"}}/>\r\n                        <img src={\"assets/img/dogs/loading.gif\"}\r\n                             style={{width: \"150px\", height: \"150px\", marginTop: \"auto\", marginBottom: \"auto\"}}/>\r\n                    </div>\r\n                </div>\r\n\r\n}\r\n\r\nexport default LoadingScreen;",{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":16,"nodeType":"180","messageId":"181","endLine":2,"endColumn":24},{"ruleId":"178","severity":1,"message":"182","line":2,"column":26,"nodeType":"180","messageId":"181","endLine":2,"endColumn":30},{"ruleId":"178","severity":1,"message":"183","line":7,"column":9,"nodeType":"180","messageId":"181","endLine":7,"endColumn":12},{"ruleId":"184","severity":1,"message":"185","line":49,"column":1,"nodeType":"186","messageId":"187","endLine":52,"endColumn":2},{"ruleId":"178","severity":1,"message":"188","line":3,"column":9,"nodeType":"180","messageId":"181","endLine":3,"endColumn":19},{"ruleId":"189","severity":1,"message":"190","line":1,"column":1,"nodeType":"191","endLine":8,"endColumn":3},{"ruleId":"192","severity":1,"message":"193","line":67,"column":8,"nodeType":"194","endLine":67,"endColumn":20,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":9,"column":5,"nodeType":"198","messageId":"199","endLine":11,"endColumn":6},{"ruleId":"178","severity":1,"message":"200","line":14,"column":15,"nodeType":"180","messageId":"181","endLine":14,"endColumn":27},{"ruleId":"201","severity":1,"message":"202","line":20,"column":88,"nodeType":"203","messageId":"204","endLine":20,"endColumn":90},{"ruleId":"201","severity":1,"message":"202","line":34,"column":71,"nodeType":"203","messageId":"204","endLine":34,"endColumn":73},{"ruleId":"205","severity":1,"message":"206","line":124,"column":88,"nodeType":"207","endLine":124,"endColumn":144},{"ruleId":"205","severity":1,"message":"206","line":126,"column":86,"nodeType":"207","endLine":126,"endColumn":120},{"ruleId":"205","severity":1,"message":"206","line":127,"column":79,"nodeType":"207","endLine":127,"endColumn":113},{"ruleId":"205","severity":1,"message":"206","line":128,"column":79,"nodeType":"207","endLine":128,"endColumn":113},{"ruleId":"205","severity":1,"message":"206","line":129,"column":79,"nodeType":"207","endLine":129,"endColumn":131},{"ruleId":"178","severity":1,"message":"208","line":2,"column":22,"nodeType":"180","messageId":"181","endLine":2,"endColumn":33},{"ruleId":"178","severity":1,"message":"209","line":8,"column":11,"nodeType":"180","messageId":"181","endLine":8,"endColumn":27},{"ruleId":"178","severity":1,"message":"210","line":2,"column":9,"nodeType":"180","messageId":"181","endLine":2,"endColumn":20},{"ruleId":"178","severity":1,"message":"211","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":13},{"ruleId":"178","severity":1,"message":"212","line":3,"column":16,"nodeType":"180","messageId":"181","endLine":3,"endColumn":20},{"ruleId":"178","severity":1,"message":"213","line":4,"column":19,"nodeType":"180","messageId":"181","endLine":4,"endColumn":33},{"ruleId":"196","severity":1,"message":"197","line":11,"column":5,"nodeType":"198","messageId":"199","endLine":15,"endColumn":6},{"ruleId":"201","severity":1,"message":"202","line":18,"column":84,"nodeType":"203","messageId":"204","endLine":18,"endColumn":86},{"ruleId":"201","severity":1,"message":"202","line":23,"column":71,"nodeType":"203","messageId":"204","endLine":23,"endColumn":73},{"ruleId":"201","severity":1,"message":"202","line":47,"column":46,"nodeType":"203","messageId":"204","endLine":47,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":59,"column":70,"nodeType":"207","endLine":60,"endColumn":108},{"ruleId":"178","severity":1,"message":"214","line":4,"column":9,"nodeType":"180","messageId":"181","endLine":4,"endColumn":22},{"ruleId":"178","severity":1,"message":"215","line":4,"column":24,"nodeType":"180","messageId":"181","endLine":4,"endColumn":34},{"ruleId":"178","severity":1,"message":"216","line":17,"column":12,"nodeType":"180","messageId":"181","endLine":17,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":10,"column":45,"nodeType":"219","messageId":"220","endLine":10,"endColumn":47},{"ruleId":"189","severity":1,"message":"190","line":5,"column":1,"nodeType":"191","endLine":42,"endColumn":2},{"ruleId":"221","severity":1,"message":"222","line":26,"column":22,"nodeType":"223","messageId":"224","endLine":34,"endColumn":21,"fix":"225"},{"ruleId":"226","severity":1,"message":"227","line":9,"column":25,"nodeType":"207","endLine":10,"endColumn":114},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Nav' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'withRouter' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchedSensorSet' and 'getSensorSet'. Either include them or remove the dependency array.","ArrayExpression",["230"],"@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'alertHistory' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'NavDropdown' is defined but never used.","'dropdown' is assigned a value but never used.","'signOutUser' is defined but never used.","'index' is defined but never used.","'Line' is defined but never used.","'DropdownButton' is defined but never used.","'removeLoading' is defined but never used.","'setLoading' is defined but never used.","'type' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"231","text":"232"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},[885,887],".","Update the dependencies array to be: [fetchedSensorSet, getSensorSet, sensorType]",{"range":"235","text":"236"},[2454,2466],"[fetchedSensorSet, getSensorSet, sensorType]"]