[{"/home/githmi/Projects/seng22212-assignment1-frontend/src/index.tsx":"1","/home/githmi/Projects/seng22212-assignment1-frontend/src/reportWebVitals.ts":"2","/home/githmi/Projects/seng22212-assignment1-frontend/src/App.tsx":"3","/home/githmi/Projects/seng22212-assignment1-frontend/src/FirebaseApp.ts":"4","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/ProtectedRoutes.tsx":"5","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/Login.tsx":"6","/home/githmi/Projects/seng22212-assignment1-frontend/src/firebaseConfig.ts":"7","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/AlertHistory.tsx":"8","/home/githmi/Projects/seng22212-assignment1-frontend/src/services/auth/auth.ts":"9","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/DashBoard.tsx":"10","/home/githmi/Projects/seng22212-assignment1-frontend/src/data-fetch/RestAPITest.ts":"11","/home/githmi/Projects/seng22212-assignment1-frontend/src/data-fetch/env.ts":"12","/home/githmi/Projects/seng22212-assignment1-frontend/src/repositories/alertHistoryRepository.ts":"13","/home/githmi/Projects/seng22212-assignment1-frontend/src/services/RestHTTP.ts":"14","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/isLoading/actions.ts":"15","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/alertHistory/actions.ts":"16","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/Store.ts":"17","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/rootReducer.ts":"18","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/alertHistory/reducers.ts":"19","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/isLoading/reducers.ts":"20","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/Header.tsx":"21"},{"size":775,"mtime":1609392761584,"results":"22","hashOfConfig":"23"},{"size":425,"mtime":1609347730847,"results":"24","hashOfConfig":"23"},{"size":1365,"mtime":1609350518506,"results":"25","hashOfConfig":"23"},{"size":179,"mtime":1609348591929,"results":"26","hashOfConfig":"23"},{"size":800,"mtime":1609393148866,"results":"27","hashOfConfig":"23"},{"size":5423,"mtime":1609348591929,"results":"28","hashOfConfig":"23"},{"size":322,"mtime":1609348591929,"results":"29","hashOfConfig":"23"},{"size":5961,"mtime":1609354779609,"results":"30","hashOfConfig":"23"},{"size":742,"mtime":1609348591929,"results":"31","hashOfConfig":"23"},{"size":5630,"mtime":1609347730847,"results":"32","hashOfConfig":"23"},{"size":2354,"mtime":1609347730847,"results":"33","hashOfConfig":"23"},{"size":69,"mtime":1609347730847,"results":"34","hashOfConfig":"23"},{"size":523,"mtime":1609353966809,"results":"35","hashOfConfig":"23"},{"size":550,"mtime":1609353859106,"results":"36","hashOfConfig":"23"},{"size":131,"mtime":1609349253331,"results":"37","hashOfConfig":"23"},{"size":100,"mtime":1609348788519,"results":"38","hashOfConfig":"23"},{"size":353,"mtime":1609350425881,"results":"39","hashOfConfig":"23"},{"size":293,"mtime":1609350336055,"results":"40","hashOfConfig":"23"},{"size":286,"mtime":1609348819363,"results":"41","hashOfConfig":"23"},{"size":330,"mtime":1609349595229,"results":"42","hashOfConfig":"23"},{"size":2801,"mtime":1609347730847,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tqhopx",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/githmi/Projects/seng22212-assignment1-frontend/src/index.tsx",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/reportWebVitals.ts",[],["91","92"],"/home/githmi/Projects/seng22212-assignment1-frontend/src/App.tsx",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/FirebaseApp.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/ProtectedRoutes.tsx",["93","94"],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/Login.tsx",["95"],"import React from \"react\";\nimport {userLogin} from \"../../services/auth/auth\";\nimport {withRouter, RouteProps} from 'react-router';\n\n\nclass Login extends React.Component<RouteProps,{[key:string]:any}>{\n    constructor(props:any) {\n        super(props);\n\n        this.state={\n            email:\"\",\n            password:\"\",\n            stayLogged:false\n        }\n    }\n\n    handleOnSubmit = (event: { preventDefault: () => void; }) => {\n        event.preventDefault();\n        userLogin(this.state.email, this.state.password, this.state.stayLogged).then(\n            e=>console.log(\"user logged\")).catch((e)=>alert(e));\n    }\n\n\n    render() {\n        return <div className=\"bg-gradient-primary\" style={{background:\" rgb(255,145,77)\"}}>\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div\n                        className=\"col-md-9 col-lg-12 col-xl-10 d-flex flex-column justify-content-center align-content-center align-self-center\">\n                        <div className=\"card shadow-lg o-hidden border-0 my-5\" style={{marginTop:\"60px\"}}>\n                            <div className=\"card-body p-0\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6 col-xl-6 d-none d-lg-flex\">\n                                    <div className=\"flex-grow-1 bg-login-image\"\n                                             style={{background:\"url(/assets/img/dogs/Monitor.png) center\"}}/>\n                                    </div>\n                                    <div className=\"col-lg-6\">\n                                        <div className=\"p-5\">\n                                            <div className=\"text-center\">\n                                                <h4 className=\"text-dark mb-4\">Welcome Back!</h4>\n                                            </div>\n                                            <form className=\"user\" onSubmit={(e)=>this.handleOnSubmit(e)}>\n                                                <div className=\"form-group\"><input\n                                                    className=\"form-control form-control-user\" type=\"email\"\n                                                    id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"\n                                                    placeholder=\"Enter Email Address...\" name=\"email\"\n                                                    value={this.state.email}\n                                                    onChange={\n                                                        (event)=>this.setState({email:event.target.value})\n                                                    }\n                                                /></div>\n                                                <div className=\"form-group\"><input\n                                                    className=\"form-control form-control-user\" type=\"password\"\n                                                    id=\"exampleInputPassword\" placeholder=\"Password\" name=\"password\"\n                                                    value={this.state.password}\n                                                    onChange={(event)=>this.setState({password:event.target.value})}\n                                                />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <div className=\"custom-control custom-checkbox small\">\n                                                        <div className=\"form-check\"><input\n                                                            className=\"form-check-input custom-control-input\"\n                                                            type=\"checkbox\" id=\"formCheck-1\"\n                                                                onChange={()=>this.setState({stayLogged:!this.state.stayLogged})}\n                                                        /><label\n                                                            className=\"form-check-label custom-control-label\"\n                                                            htmlFor=\"formCheck-1\">Remember Me</label></div>\n                                                    </div>\n                                                </div>\n                                                <button className=\"btn btn-primary btn-block text-white btn-user\"\n                                                        type=\"submit\" style={{background:\" rgb(255,145,77)\"}}>Login\n                                                </button>\n                                                <hr/>\n                                                    <hr/>\n                                            </form>\n                                            <div className=\"text-center\"><a className=\"small\"\n                                                                            href=\"forgot-password.html\">Forgot\n                                                Password?</a></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n                </div>;\n    }\n}\n\nexport default Login;","/home/githmi/Projects/seng22212-assignment1-frontend/src/firebaseConfig.ts",["96"],"export default {\n    apiKey: \"AIzaSyD7p4qs_W25Dnu7XUj354SObDrFBNagabY\",\n    authDomain: \"seng22212-assignment-1.firebaseapp.com\",\n    projectId: \"seng22212-assignment-1\",\n    storageBucket: \"seng22212-assignment-1.appspot.com\",\n    messagingSenderId: \"77647971611\",\n    appId: \"1:77647971611:web:8b34537460983f39867fbe\"\n};","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/AlertHistory.tsx",["97","98","99","100","101","102","103"],"/home/githmi/Projects/seng22212-assignment1-frontend/src/services/auth/auth.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/DashBoard.tsx",["104","105"],"import React, {ChangeEvent, useEffect, useState} from 'react';\nimport {Line} from \"react-chartjs-2\";\nimport {useParams} from \"react-router-dom\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport {API} from \"../../data-fetch/RestAPITest\";\nimport {SensorMeta, sensorRecode} from \"../../types/types\";\nimport Swal from \"sweetalert2\";\n\nconst DashBoard: React.FC = () => {\n    document.title = 'weatherApp | Dashboard'\n    let {sensor}: any = useParams();\n    let icon = (sensor === 'temperature') ? \"feather-thermometer\" : (sensor === \"rain\") ? \"feather-cloud-rain\" :\n        (sensor === 'wind') ? \"feather-wind\" : \"feather-cloud\";\n    let day = new Date(Date.now() - 86400000 * 40);\n    const [startDate, setStartDate] = useState(day.toISOString().slice(0, 10));\n    const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10));\n    const onChangeStartHandle = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setStartDate(e.target.value);\n    };\n    const onChangeEndHandle = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setEndDate(e.target.value);\n    };\n    const [sensorData, setSensorData] = useState<any>({labels: [], datasets: [], options: []});\n    const [lastRead, setLastRead] = useState<any>('');\n    const [sensorId, setSensorId] = useState<any>('');\n    const [sensorSet, setSensorSet] = useState<SensorMeta[]>([]);\n\n    let fetchedSensorSet: SensorMeta[];\n    const getSensorSet = async () => {\n        const r = await API.GET(`/sensor?sensorType=${sensor.toUpperCase()}`);\n        fetchedSensorSet = r;\n        return r;\n    }\n\n    useEffect(() => {\n        getSensorSet().then(() => {\n            let sensors = fetchedSensorSet.map((sen: SensorMeta) => sen);\n            setSensorSet(sensors);\n        })\n\n        if (sensor !== \"temperature\") {\n            Swal.fire('Sorry. Those type of sensors does not have setup.  ' +\n                'Temperature sensors only have been set up.');\n        } else {\n            Swal.fire('Please select the sensor and time range as you wish');\n        }\n    }, [sensor])\n\n    let fetchedDataSet: sensorRecode[];\n    const getRecord = async () => {\n        const r = await API.GET(`/data?sensorId=${sensorId}&from=${startDate}&to=${endDate}`);\n        fetchedDataSet = r;\n        return r\n    }\n\n    useEffect(() => {\n        getRecord().then(() => {\n            let val = fetchedDataSet[fetchedDataSet.length - 1].dataValue;\n            let data = {\n                labels: fetchedDataSet.map((recode) => `${new Date(recode.capturedDate).getDate()}d-${new Date(recode.capturedDate).getHours()}:${new Date(recode.capturedDate).getMinutes()}h`),\n                datasets: [\n                    {\n                        label: sensor,\n                        data: fetchedDataSet.map((recode) => recode.dataValue),\n                        fill: false,\n                        borderColor: (sensor === 'wind') ? '#0d8c1a' : (sensor === 'temperature') ? '#ac1010' :\n                            (sensor === 'rain') ? '#0824b3' : '#13caaf'\n                    }\n                ],\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                }\n            };\n            setSensorData(data);\n            setLastRead(val);\n        })\n\n    }, [startDate, endDate, sensorId])\n\n    return (\n        <Container className='dashboard min-vh-100'>\n            <br/><br/>\n            <h2 className='pt-4 text-left'>Dashboard</h2>\n            <div className='p-dashboard-line'>\n                <Row>\n                    <Col xs={12} sm={12} md={4}>\n                        <i className={icon}/>\n                        <select name=\"sensors\" id=\"sensors\"\n                                onChange={(e: ChangeEvent<HTMLSelectElement>) => setSensorId(e.target.value)}>\n                            <option value=\" \">Select Sensor</option>\n                            {sensorSet.map((value: SensorMeta, index:number) => <option key={index} value={value.id}>{value.title}</option>)}\n                        </select>\n                    </Col>\n                    <Col xs={12} sm={6} md={4}>\n                        <span className='float-left'>From:- </span>\n                        <input className='float-left' type=\"date\" id=\"start-date\" name=\"start_date\"\n                               onChange={onChangeStartHandle}\n                               placeholder=\"\" value={startDate ? startDate : ''}/>\n                    </Col>\n                    <Col xs={12} sm={6} md={4}>\n                        <span className='float-left'> To:- </span>\n                        <input className='float-left' type=\"date\" id=\"end-date\" name=\"end_date\"\n                               onChange={onChangeEndHandle}\n                               placeholder=\"\" value={endDate ? endDate : ''}/>\n                    </Col>\n                </Row>\n                <br/>\n                <div className='float-right pr-4'>\n                    <span className='float-left'>Last read value - </span>\n                    <span className='float-left'>{lastRead}</span>\n                </div>\n            </div>\n            <div className='d-none d-md-block d-lg-none'><Line data={sensorData} width={100} height={50}/></div>\n            <div className='d-none d-lg-block'><Line data={sensorData} width={100} height={35}/></div>\n            <div className='d-none d-sm-block d-md-none'><Line data={sensorData} width={100} height={70}/></div>\n            <div className='d-sm-none'><Line data={sensorData} width={90} height={100}/></div>\n            <br/><br/>\n        </Container>\n    );\n}\n\nexport default DashBoard;\n","/home/githmi/Projects/seng22212-assignment1-frontend/src/data-fetch/RestAPITest.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/data-fetch/env.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/repositories/alertHistoryRepository.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/services/RestHTTP.ts",["106"],"import axios from \"axios\";\n\nconst host=\"https://api-server-t2h37jtwmq-uc.a.run.app/api\";\n\nexport default {\n    GET: async (endpoint:string, param:any) => {\n        return await axios.get(`${host}${endpoint}`,\n            {\n                params :param,\n                headers:{\n                    'Authorization': `Bearer `,\n                },\n            }\n        ).then( response => {\n            return response.data;\n        }).catch( error=> {\n            throw error;\n        }).catch(error => {\n            throw error;\n        })\n\n    }\n}","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/isLoading/actions.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/alertHistory/actions.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/Store.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/rootReducer.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/alertHistory/reducers.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/isLoading/reducers.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/Header.tsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":2,"column":16,"nodeType":"113","messageId":"114","endLine":2,"endColumn":24},{"ruleId":"115","severity":1,"message":"116","line":35,"column":1,"nodeType":"117","messageId":"118","endLine":37,"endColumn":19},{"ruleId":"111","severity":1,"message":"119","line":3,"column":9,"nodeType":"113","messageId":"114","endLine":3,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":1,"column":1,"nodeType":"122","endLine":8,"endColumn":3},{"ruleId":"123","severity":1,"message":"124","line":8,"column":5,"nodeType":"125","messageId":"126","endLine":10,"endColumn":6},{"ruleId":"111","severity":1,"message":"127","line":13,"column":15,"nodeType":"113","messageId":"114","endLine":13,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":72,"column":88,"nodeType":"130","endLine":72,"endColumn":144},{"ruleId":"128","severity":1,"message":"129","line":74,"column":86,"nodeType":"130","endLine":74,"endColumn":120},{"ruleId":"128","severity":1,"message":"129","line":75,"column":79,"nodeType":"130","endLine":75,"endColumn":113},{"ruleId":"128","severity":1,"message":"129","line":76,"column":79,"nodeType":"130","endLine":76,"endColumn":113},{"ruleId":"128","severity":1,"message":"129","line":77,"column":79,"nodeType":"130","endLine":77,"endColumn":131},{"ruleId":"131","severity":1,"message":"132","line":47,"column":8,"nodeType":"133","endLine":47,"endColumn":16,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":79,"column":8,"nodeType":"133","endLine":79,"endColumn":38,"suggestions":"136"},{"ruleId":"120","severity":1,"message":"121","line":5,"column":1,"nodeType":"122","endLine":23,"endColumn":2},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'withRouter' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'alertHistory' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchedSensorSet' and 'getSensorSet'. Either include them or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has missing dependencies: 'fetchedDataSet', 'getRecord', and 'sensor'. Either include them or remove the dependency array.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [fetchedSensorSet, getSensorSet, sensor]",{"range":"145","text":"146"},"Update the dependencies array to be: [startDate, endDate, sensorId, getRecord, fetchedDataSet, sensor]",{"range":"147","text":"148"},[2052,2060],"[fetchedSensorSet, getSensorSet, sensor]",[3294,3324],"[startDate, endDate, sensorId, getRecord, fetchedDataSet, sensor]"]