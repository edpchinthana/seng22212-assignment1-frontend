[{"/home/githmi/Projects/seng22212-assignment1-frontend/src/index.tsx":"1","/home/githmi/Projects/seng22212-assignment1-frontend/src/reportWebVitals.ts":"2","/home/githmi/Projects/seng22212-assignment1-frontend/src/App.tsx":"3","/home/githmi/Projects/seng22212-assignment1-frontend/src/FirebaseApp.ts":"4","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/ProtectedRoutes.tsx":"5","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/Login.tsx":"6","/home/githmi/Projects/seng22212-assignment1-frontend/src/firebaseConfig.ts":"7","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/AlertHistory.tsx":"8","/home/githmi/Projects/seng22212-assignment1-frontend/src/services/auth/auth.ts":"9","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/DashBoard.tsx":"10","/home/githmi/Projects/seng22212-assignment1-frontend/src/data-fetch/RestAPITest.ts":"11","/home/githmi/Projects/seng22212-assignment1-frontend/src/data-fetch/env.ts":"12","/home/githmi/Projects/seng22212-assignment1-frontend/src/repositories/alertHistoryRepository.ts":"13","/home/githmi/Projects/seng22212-assignment1-frontend/src/services/RestHTTP.ts":"14","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/isLoading/actions.ts":"15","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/alertHistory/actions.ts":"16","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/Store.ts":"17","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/rootReducer.ts":"18","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/alertHistory/reducers.ts":"19","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/isLoading/reducers.ts":"20","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/Header.tsx":"21","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/sensors/reducers.ts":"22","/home/githmi/Projects/seng22212-assignment1-frontend/src/repositories/sensorRepository.ts":"23","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/CostomLine.tsx":"24","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/sensors/actions.ts":"25","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/Settings.tsx":"26","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/Members.tsx":"27","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/PageNotFound.tsx":"28","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/Sensor.tsx":"29","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/SensorForm.tsx":"30"},{"size":775,"mtime":1609392761584,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1609347730847,"results":"33","hashOfConfig":"32"},{"size":1365,"mtime":1609350518506,"results":"34","hashOfConfig":"32"},{"size":179,"mtime":1609348591929,"results":"35","hashOfConfig":"32"},{"size":1500,"mtime":1609409341410,"results":"36","hashOfConfig":"32"},{"size":5423,"mtime":1609348591929,"results":"37","hashOfConfig":"32"},{"size":322,"mtime":1609348591929,"results":"38","hashOfConfig":"32"},{"size":5961,"mtime":1609354779609,"results":"39","hashOfConfig":"32"},{"size":742,"mtime":1609348591929,"results":"40","hashOfConfig":"32"},{"size":9506,"mtime":1609401238684,"results":"41","hashOfConfig":"32"},{"size":2354,"mtime":1609347730847,"results":"42","hashOfConfig":"32"},{"size":69,"mtime":1609347730847,"results":"43","hashOfConfig":"32"},{"size":523,"mtime":1609353966809,"results":"44","hashOfConfig":"32"},{"size":963,"mtime":1609410061594,"results":"45","hashOfConfig":"32"},{"size":131,"mtime":1609349253331,"results":"46","hashOfConfig":"32"},{"size":100,"mtime":1609348788519,"results":"47","hashOfConfig":"32"},{"size":353,"mtime":1609350425881,"results":"48","hashOfConfig":"32"},{"size":376,"mtime":1609401238688,"results":"49","hashOfConfig":"32"},{"size":286,"mtime":1609348819363,"results":"50","hashOfConfig":"32"},{"size":330,"mtime":1609349595229,"results":"51","hashOfConfig":"32"},{"size":1381,"mtime":1609409341410,"results":"52","hashOfConfig":"32"},{"size":1124,"mtime":1609394094507,"results":"53","hashOfConfig":"32"},{"size":1700,"mtime":1609394249767,"results":"54","hashOfConfig":"32"},{"size":1478,"mtime":1609401238684,"results":"55","hashOfConfig":"32"},{"size":301,"mtime":1609394044846,"results":"56","hashOfConfig":"32"},{"size":3922,"mtime":1609409341410,"results":"57","hashOfConfig":"32"},{"size":4320,"mtime":1609347730847,"results":"58","hashOfConfig":"32"},{"size":672,"mtime":1609409739171,"results":"59","hashOfConfig":"32"},{"size":2080,"mtime":1609347730847,"results":"60","hashOfConfig":"32"},{"size":6709,"mtime":1609347730847,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"tqhopx",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/githmi/Projects/seng22212-assignment1-frontend/src/index.tsx",[],["129","130"],"/home/githmi/Projects/seng22212-assignment1-frontend/src/reportWebVitals.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/App.tsx",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/FirebaseApp.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/ProtectedRoutes.tsx",["131","132","133","134"],"import React from 'react';\nimport {Route, Redirect, Link} from 'react-router-dom';\nimport {Switch} from 'react-router';\nimport Dashboard from \"./pages/DashBoard\";\nimport AlertHistory from \"./pages/AlertHistory\";\nimport Header from './Header';\nimport {Nav} from \"react-bootstrap\";\nimport Members from \"./pages/Members\";\nimport Settings from \"./pages/Settings\";\nimport PageNotFound from \"./pages/PageNotFound\";\n\nfunction ProtectedRoutes() {\n\n\n    return (\n        <div id=\"page-top\">\n            <Header/>\n            <div id=\"wrapper\" className=\"pt-5\">\n                <Switch>\n                    <Route\n                        exact\n                        path={\"/dashboard\"}\n                        component={Dashboard}\n                    />\n                    <Route\n                        exact\n                        path={'/alert-history'}\n                        component={AlertHistory}\n                    />\n                    <Route\n                        exact\n                        path={'/members'}\n                        component={Members}/>\n                    <Route\n                        exact\n                        path={'/settings'}\n                        component={Settings}/>\n                    <Route\n                        path={\"/*\"}\n                        component={PageNotFound}/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nexport default ProtectedRoutes;\n\n{/* <Redirect\n                to={\"/dashboard\"}\n            /> */\n}\n","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/Login.tsx",["135"],"import React from \"react\";\nimport {userLogin} from \"../../services/auth/auth\";\nimport {withRouter, RouteProps} from 'react-router';\n\n\nclass Login extends React.Component<RouteProps,{[key:string]:any}>{\n    constructor(props:any) {\n        super(props);\n\n        this.state={\n            email:\"\",\n            password:\"\",\n            stayLogged:false\n        }\n    }\n\n    handleOnSubmit = (event: { preventDefault: () => void; }) => {\n        event.preventDefault();\n        userLogin(this.state.email, this.state.password, this.state.stayLogged).then(\n            e=>console.log(\"user logged\")).catch((e)=>alert(e));\n    }\n\n\n    render() {\n        return <div className=\"bg-gradient-primary\" style={{background:\" rgb(255,145,77)\"}}>\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div\n                        className=\"col-md-9 col-lg-12 col-xl-10 d-flex flex-column justify-content-center align-content-center align-self-center\">\n                        <div className=\"card shadow-lg o-hidden border-0 my-5\" style={{marginTop:\"60px\"}}>\n                            <div className=\"card-body p-0\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6 col-xl-6 d-none d-lg-flex\">\n                                    <div className=\"flex-grow-1 bg-login-image\"\n                                             style={{background:\"url(/assets/img/dogs/Monitor.png) center\"}}/>\n                                    </div>\n                                    <div className=\"col-lg-6\">\n                                        <div className=\"p-5\">\n                                            <div className=\"text-center\">\n                                                <h4 className=\"text-dark mb-4\">Welcome Back!</h4>\n                                            </div>\n                                            <form className=\"user\" onSubmit={(e)=>this.handleOnSubmit(e)}>\n                                                <div className=\"form-group\"><input\n                                                    className=\"form-control form-control-user\" type=\"email\"\n                                                    id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"\n                                                    placeholder=\"Enter Email Address...\" name=\"email\"\n                                                    value={this.state.email}\n                                                    onChange={\n                                                        (event)=>this.setState({email:event.target.value})\n                                                    }\n                                                /></div>\n                                                <div className=\"form-group\"><input\n                                                    className=\"form-control form-control-user\" type=\"password\"\n                                                    id=\"exampleInputPassword\" placeholder=\"Password\" name=\"password\"\n                                                    value={this.state.password}\n                                                    onChange={(event)=>this.setState({password:event.target.value})}\n                                                />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <div className=\"custom-control custom-checkbox small\">\n                                                        <div className=\"form-check\"><input\n                                                            className=\"form-check-input custom-control-input\"\n                                                            type=\"checkbox\" id=\"formCheck-1\"\n                                                                onChange={()=>this.setState({stayLogged:!this.state.stayLogged})}\n                                                        /><label\n                                                            className=\"form-check-label custom-control-label\"\n                                                            htmlFor=\"formCheck-1\">Remember Me</label></div>\n                                                    </div>\n                                                </div>\n                                                <button className=\"btn btn-primary btn-block text-white btn-user\"\n                                                        type=\"submit\" style={{background:\" rgb(255,145,77)\"}}>Login\n                                                </button>\n                                                <hr/>\n                                                    <hr/>\n                                            </form>\n                                            <div className=\"text-center\"><a className=\"small\"\n                                                                            href=\"forgot-password.html\">Forgot\n                                                Password?</a></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n                </div>;\n    }\n}\n\nexport default Login;","/home/githmi/Projects/seng22212-assignment1-frontend/src/firebaseConfig.ts",["136"],"export default {\n    apiKey: \"AIzaSyD7p4qs_W25Dnu7XUj354SObDrFBNagabY\",\n    authDomain: \"seng22212-assignment-1.firebaseapp.com\",\n    projectId: \"seng22212-assignment-1\",\n    storageBucket: \"seng22212-assignment-1.appspot.com\",\n    messagingSenderId: \"77647971611\",\n    appId: \"1:77647971611:web:8b34537460983f39867fbe\"\n};","/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/AlertHistory.tsx",["137","138","139","140","141","142","143"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { getAlertHistory } from \"../../repositories/alertHistoryRepository\";\n\n\nclass AlertHistory extends React.Component<any, {[key:string]:any}> {\n\n    constructor(props: {}| Readonly<{}>) {\n        super(props);\n    }\n\n    getAlertHistory =async () => {\n        const alertHistory = await getAlertHistory();\n        this.props.getAlertHistory();\n    }\n\n    componentDidMount() {\n        this.props.getAlertHistory();\n    }\n\n    render() {\n\n        return <div className=\"d-flex flex-column\" id=\"content-wrapper\">\n                    <div id=\"content\">\n                        <div className=\"container-fluid\" style={{paddingTop: \"30px\"}}>\n                            <h3 className=\"text-dark mb-4\">Alert History</h3>\n                            <div className=\"card shadow\">\n                                <div className=\"card-body\">\n                                    <div className=\"table-responsive table mt-2\" id=\"dataTable\" role=\"grid\" aria-describedby=\"dataTable_info\">\n                                        <table className=\"table my-0\" id=\"dataTable\">\n                                            <thead>\n                                            <tr>\n                                                <th>Id</th>\n                                                <th>Date&nbsp;</th>\n                                                <th>Cause</th>\n                                                <th>Threshold</th>\n                                                <th>Value</th>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.props.alertHistory.map((alert:any, index:number)=>{\n                                                    return (\n                                                        <tr key={index}>\n                                                            <td>{alert.id}</td>\n                                                            <td>{alert.sensorData.capturedDate}</td>\n                                                            <td>{alert.cause}</td>\n                                                            <td>{alert.sensorData.threshold}</td>\n                                                            <td>{alert.sensorData.dataValue}</td>\n                                                        </tr>\n                                                    )\n                                                })}\n                                                <tr></tr>\n                                            </tbody>\n                                            <tfoot>\n                                            <tr>\n                                                <td><strong>Id</strong></td>\n                                                <td><strong>Date</strong></td>\n                                                <td><strong>Cause</strong></td>\n                                                <td><strong>Threshold</strong></td>\n                                                <td><strong>Value</strong></td>\n                                            </tr>\n                                            </tfoot>\n                                        </table>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6 align-self-center\">\n                                            <p id=\"dataTable_info\" className=\"dataTables_info\" role=\"status\" aria-live=\"polite\">Showing 1 to 10 of 27</p>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <nav className=\"d-lg-flex justify-content-lg-end dataTables_paginate paging_simple_numbers\">\n                                                <ul className=\"pagination\">\n                                                    <li className=\"page-item disabled\"><a className=\"page-link\" href=\"#\" aria-label=\"Previous\">\n                                                        <span aria-hidden=\"true\">«</span></a></li>\n                                                    <li className=\"page-item active\"><a className=\"page-link\" href=\"#\">1</a></li>\n                                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n                                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\" aria-label=\"Next\">\n                                                        <span aria-hidden=\"true\">»</span></a></li>\n                                                </ul>\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <footer className=\"bg-white sticky-footer\">\n                        <div className=\"container my-auto\">\n                            <div className=\"text-center my-auto copyright\"><span>Copyright © Monitor 2020</span></div>\n                        </div>\n                    </footer>\n                </div>;\n\n    }\n\n}\n\nconst mapStateToProps = (state : any) => ({\n    alertHistory: state.alertHistory\n})\n\nexport default connect(mapStateToProps, {getAlertHistory})(AlertHistory);\n\n/* const AlertHistory: React.FC = () => {\n    document.title = 'weatherApp | alert history'\n    return (\n        <div className='min-vh-100'>\n            <br/><br/>\n            <h2 className='pt-4'>Alert History</h2>\n        </div>\n    );\n}\n\nexport default AlertHistory; */\n","/home/githmi/Projects/seng22212-assignment1-frontend/src/services/auth/auth.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/DashBoard.tsx",["144","145"],"import React, {ChangeEvent, useEffect, useState} from 'react';\nimport {Line} from \"react-chartjs-2\";\nimport {useParams} from \"react-router-dom\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport {API} from \"../../data-fetch/RestAPITest\";\nimport {SensorMeta, sensorRecode} from \"../../types/types\";\nimport Swal from \"sweetalert2\";\n\nconst DashBoard: React.FC = () => {\n    document.title = 'weatherApp | Dashboard'\n    let {sensor}: any = useParams();\n    let icon = (sensor === 'temperature') ? \"feather-thermometer\" : (sensor === \"rain\") ? \"feather-cloud-rain\" :\n        (sensor === 'wind') ? \"feather-wind\" : \"feather-cloud\";\n    let day = new Date(Date.now() - 86400000 * 40);\n    const [startDate, setStartDate] = useState(day.toISOString().slice(0, 10));\n    const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10));\n    const onChangeStartHandle = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setStartDate(e.target.value);\n    };\n    const onChangeEndHandle = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setEndDate(e.target.value);\n    };\n    const [sensorData, setSensorData] = useState<any>({labels: [], datasets: [], options: []});\n    const [lastRead, setLastRead] = useState<any>('');\n    const [sensorId, setSensorId] = useState<any>('');\n    const [sensorSet, setSensorSet] = useState<SensorMeta[]>([]);\n\n    let fetchedSensorSet: SensorMeta[];\n    const getSensorSet = async () => {\n        const r = await API.GET(`/sensor?sensorType=${sensor.toUpperCase()}`);\n        fetchedSensorSet = r;\n        return r;\n    }\n\n    useEffect(() => {\n        getSensorSet().then(() => {\n            let sensors = fetchedSensorSet.map((sen: SensorMeta) => sen);\n            setSensorSet(sensors);\n        })\n\n        if (sensor !== \"temperature\") {\n            Swal.fire('Sorry. Those type of sensors does not have setup.  ' +\n                'Temperature sensors only have been set up.');\n        } else {\n            Swal.fire('Please select the sensor and time range as you wish');\n        }\n    }, [sensor])\n\n    let fetchedDataSet: sensorRecode[];\n    const getRecord = async () => {\n        const r = await API.GET(`/data?sensorId=${sensorId}&from=${startDate}&to=${endDate}`);\n        fetchedDataSet = r;\n        return r\n    }\n\n    useEffect(() => {\n        getRecord().then(() => {\n            let val = fetchedDataSet[fetchedDataSet.length - 1].dataValue;\n            let data = {\n                labels: fetchedDataSet.map((recode) => `${new Date(recode.capturedDate).getDate()}d-${new Date(recode.capturedDate).getHours()}:${new Date(recode.capturedDate).getMinutes()}h`),\n                datasets: [\n                    {\n                        label: sensor,\n                        data: fetchedDataSet.map((recode) => recode.dataValue),\n                        fill: false,\n                        borderColor: (sensor === 'wind') ? '#0d8c1a' : (sensor === 'temperature') ? '#ac1010' :\n                            (sensor === 'rain') ? '#0824b3' : '#13caaf'\n                    }\n                ],\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                }\n            };\n            setSensorData(data);\n            setLastRead(val);\n        })\n\n    }, [startDate, endDate, sensorId])\n\n    return (\n        <Container className='dashboard min-vh-100'>\n            <br/><br/>\n            <h2 className='pt-4 text-left'>Dashboard</h2>\n            <div className='p-dashboard-line'>\n                <Row>\n                    <Col xs={12} sm={12} md={4}>\n                        <i className={icon}/>\n                        <select name=\"sensors\" id=\"sensors\"\n                                onChange={(e: ChangeEvent<HTMLSelectElement>) => setSensorId(e.target.value)}>\n                            <option value=\" \">Select Sensor</option>\n                            {sensorSet.map((value: SensorMeta, index:number) => <option key={index} value={value.id}>{value.title}</option>)}\n                        </select>\n                    </Col>\n                    <Col xs={12} sm={6} md={4}>\n                        <span className='float-left'>From:- </span>\n                        <input className='float-left' type=\"date\" id=\"start-date\" name=\"start_date\"\n                               onChange={onChangeStartHandle}\n                               placeholder=\"\" value={startDate ? startDate : ''}/>\n                    </Col>\n                    <Col xs={12} sm={6} md={4}>\n                        <span className='float-left'> To:- </span>\n                        <input className='float-left' type=\"date\" id=\"end-date\" name=\"end_date\"\n                               onChange={onChangeEndHandle}\n                               placeholder=\"\" value={endDate ? endDate : ''}/>\n                    </Col>\n                </Row>\n                <br/>\n                <div className='float-right pr-4'>\n                    <span className='float-left'>Last read value - </span>\n                    <span className='float-left'>{lastRead}</span>\n                </div>\n            </div>\n            <div className='d-none d-md-block d-lg-none'><Line data={sensorData} width={100} height={50}/></div>\n            <div className='d-none d-lg-block'><Line data={sensorData} width={100} height={35}/></div>\n            <div className='d-none d-sm-block d-md-none'><Line data={sensorData} width={100} height={70}/></div>\n            <div className='d-sm-none'><Line data={sensorData} width={90} height={100}/></div>\n            <br/><br/>\n        </Container>\n    );\n}\n\nexport default DashBoard;\n","/home/githmi/Projects/seng22212-assignment1-frontend/src/data-fetch/RestAPITest.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/data-fetch/env.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/repositories/alertHistoryRepository.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/services/RestHTTP.ts",["146","147"],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/isLoading/actions.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/alertHistory/actions.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/Store.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/rootReducer.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/alertHistory/reducers.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/isLoading/reducers.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/Header.tsx",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/store/sensors/reducers.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/repositories/sensorRepository.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/CostomLine.tsx",["148"],"import React from \"react\";\nimport {Line} from \"react-chartjs-2\";\n\nfunction CustomLine(props:any){\n\n    const labels: any[]=[];\n    const dataSet: any[]=[];\n    const thresholdSet: any[]=[];\n\n    props.data.map((data: any, index:number)=>{\n        labels.push(new Date(data.capturedDate).toDateString().substr(4));\n        dataSet.push(data.dataValue);\n        thresholdSet.push(data.threshold);\n    })\n\n    const chartData = {\n        labels: labels,\n        datasets:[\n            {\n                label: \"Sensor Reading\",\n                data:dataSet,\n                fill:true,\n                borderColor:'#6200ff'\n            },\n            {\n                label: \"Threshold Value\",\n                data:thresholdSet,\n                fill:false,\n                borderColor:'#ff1a00'\n            }\n        ],\n        options:{\n            responsive:false,\n            maintainAspectRatio: false\n        }\n\n    }\n\n    return(\n        <div>\n            <div className='d-none d-md-block d-lg-none'><Line data={chartData} width={100} height={50}/></div>\n            <div className='d-none d-lg-block'><Line data={chartData} width={100} height={35}/></div>\n            <div className='d-none d-sm-block d-md-none'><Line data={chartData} width={100} height={70}/></div>\n            <div className='d-sm-none'><Line data={chartData} width={90} height={100}/></div>\n        </div>\n    )\n\n    // ) <Line data={chartData} height={35} width={100}/>\n}\n\nexport default CustomLine;\n","/home/githmi/Projects/seng22212-assignment1-frontend/src/store/sensors/actions.ts",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/Settings.tsx",["149"],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/Members.tsx",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/pages/PageNotFound.tsx",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/Sensor.tsx",[],"/home/githmi/Projects/seng22212-assignment1-frontend/src/components/SensorForm.tsx",["150"],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":2,"column":16,"nodeType":"157","messageId":"158","endLine":2,"endColumn":24},{"ruleId":"155","severity":1,"message":"159","line":2,"column":26,"nodeType":"157","messageId":"158","endLine":2,"endColumn":30},{"ruleId":"155","severity":1,"message":"160","line":7,"column":9,"nodeType":"157","messageId":"158","endLine":7,"endColumn":12},{"ruleId":"161","severity":1,"message":"162","line":49,"column":1,"nodeType":"163","messageId":"164","endLine":52,"endColumn":2},{"ruleId":"155","severity":1,"message":"165","line":3,"column":9,"nodeType":"157","messageId":"158","endLine":3,"endColumn":19},{"ruleId":"166","severity":1,"message":"167","line":1,"column":1,"nodeType":"168","endLine":8,"endColumn":3},{"ruleId":"169","severity":1,"message":"170","line":8,"column":5,"nodeType":"171","messageId":"172","endLine":10,"endColumn":6},{"ruleId":"155","severity":1,"message":"173","line":13,"column":15,"nodeType":"157","messageId":"158","endLine":13,"endColumn":27},{"ruleId":"174","severity":1,"message":"175","line":72,"column":88,"nodeType":"176","endLine":72,"endColumn":144},{"ruleId":"174","severity":1,"message":"175","line":74,"column":86,"nodeType":"176","endLine":74,"endColumn":120},{"ruleId":"174","severity":1,"message":"175","line":75,"column":79,"nodeType":"176","endLine":75,"endColumn":113},{"ruleId":"174","severity":1,"message":"175","line":76,"column":79,"nodeType":"176","endLine":76,"endColumn":113},{"ruleId":"174","severity":1,"message":"175","line":77,"column":79,"nodeType":"176","endLine":77,"endColumn":131},{"ruleId":"177","severity":1,"message":"178","line":47,"column":8,"nodeType":"179","endLine":47,"endColumn":16,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"181","line":79,"column":8,"nodeType":"179","endLine":79,"endColumn":38,"suggestions":"182"},{"ruleId":"166","severity":1,"message":"167","line":5,"column":1,"nodeType":"168","endLine":42,"endColumn":2},{"ruleId":"183","severity":1,"message":"184","line":26,"column":22,"nodeType":"185","messageId":"186","endLine":34,"endColumn":21,"fix":"187"},{"ruleId":"188","severity":1,"message":"189","line":10,"column":45,"nodeType":"190","messageId":"191","endLine":10,"endColumn":47},{"ruleId":"177","severity":1,"message":"178","line":67,"column":8,"nodeType":"179","endLine":67,"endColumn":20,"suggestions":"192"},{"ruleId":"155","severity":1,"message":"193","line":17,"column":12,"nodeType":"157","messageId":"158","endLine":17,"endColumn":16},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Nav' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'withRouter' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'alertHistory' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchedSensorSet' and 'getSensorSet'. Either include them or remove the dependency array.","ArrayExpression",["196"],"React Hook useEffect has missing dependencies: 'fetchedDataSet', 'getRecord', and 'sensor'. Either include them or remove the dependency array.",["197"],"no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"198","text":"199"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["200"],"'type' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},[852,854],".",{"desc":"205","fix":"206"},"Update the dependencies array to be: [fetchedSensorSet, getSensorSet, sensor]",{"range":"207","text":"208"},"Update the dependencies array to be: [startDate, endDate, sensorId, getRecord, fetchedDataSet, sensor]",{"range":"209","text":"210"},"Update the dependencies array to be: [fetchedSensorSet, getSensorSet, sensorType]",{"range":"211","text":"212"},[2052,2060],"[fetchedSensorSet, getSensorSet, sensor]",[3294,3324],"[startDate, endDate, sensorId, getRecord, fetchedDataSet, sensor]",[2388,2400],"[fetchedSensorSet, getSensorSet, sensorType]"]