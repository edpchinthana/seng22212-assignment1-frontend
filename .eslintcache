[{"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\index.tsx":"1","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\App.tsx":"3","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\Footer.tsx":"4","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\Header.tsx":"5","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\Members.tsx":"6","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\Settings.tsx":"7","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\AlertHistory.tsx":"8","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\About.tsx":"9","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\Home.tsx":"10","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\DashBoard.tsx":"11","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\data-fetch\\RestAPITest.ts":"12","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\Sensor.tsx":"13","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\SensorForm.tsx":"14","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\data-fetch\\NoName.tsx":"15","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\data-fetch\\env.ts":"16","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\Store.ts":"17","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\FirebaseApp.ts":"18","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\ProtectedRoutes.tsx":"19","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\Login.tsx":"20","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\rootReducer.ts":"21","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\firebaseConfig.ts":"22","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\services\\auth\\auth.ts":"23","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\alertHistory\\reducers.ts":"24","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\isLoading\\reducers.ts":"25","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\sensors\\reducers.ts":"26","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\repositories\\alertHistoryRepository.ts":"27","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\repositories\\sensorRepository.ts":"28","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\CostomLine.tsx":"29","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\sensors\\actions.ts":"30","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\alertHistory\\actions.ts":"31","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\services\\RestHTTP.ts":"32","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\isLoading\\actions.ts":"33"},{"size":800,"mtime":1609450361573,"results":"34","hashOfConfig":"35"},{"size":440,"mtime":1609449158866,"results":"36","hashOfConfig":"35"},{"size":1421,"mtime":1609450361563,"results":"37","hashOfConfig":"35"},{"size":365,"mtime":1609449158850,"results":"38","hashOfConfig":"35"},{"size":2858,"mtime":1609449158851,"results":"39","hashOfConfig":"35"},{"size":4414,"mtime":1609449158858,"results":"40","hashOfConfig":"35"},{"size":4021,"mtime":1609449158858,"results":"41","hashOfConfig":"35"},{"size":6075,"mtime":1609450361568,"results":"42","hashOfConfig":"35"},{"size":349,"mtime":1609449158854,"results":"43","hashOfConfig":"35"},{"size":2143,"mtime":1609449158856,"results":"44","hashOfConfig":"35"},{"size":9652,"mtime":1609450361570,"results":"45","hashOfConfig":"35"},{"size":2441,"mtime":1609449158862,"results":"46","hashOfConfig":"35"},{"size":2145,"mtime":1609449158852,"results":"47","hashOfConfig":"35"},{"size":6852,"mtime":1609449158853,"results":"48","hashOfConfig":"35"},{"size":654,"mtime":1609449158861,"results":"49","hashOfConfig":"35"},{"size":70,"mtime":1609449158863,"results":"50","hashOfConfig":"35"},{"size":365,"mtime":1609450361581,"results":"51","hashOfConfig":"35"},{"size":184,"mtime":1609450361563,"results":"52","hashOfConfig":"35"},{"size":835,"mtime":1609450361567,"results":"53","hashOfConfig":"35"},{"size":5513,"mtime":1609450361571,"results":"54","hashOfConfig":"35"},{"size":389,"mtime":1609450361599,"results":"55","hashOfConfig":"35"},{"size":329,"mtime":1609450361572,"results":"56","hashOfConfig":"35"},{"size":765,"mtime":1609450361580,"results":"57","hashOfConfig":"35"},{"size":296,"mtime":1609450361589,"results":"58","hashOfConfig":"35"},{"size":342,"mtime":1609450361597,"results":"59","hashOfConfig":"35"},{"size":1165,"mtime":1609450361601,"results":"60","hashOfConfig":"35"},{"size":540,"mtime":1609450361577,"results":"61","hashOfConfig":"35"},{"size":1762,"mtime":1609450361578,"results":"62","hashOfConfig":"35"},{"size":1529,"mtime":1609450361565,"results":"63","hashOfConfig":"35"},{"size":315,"mtime":1609450361600,"results":"64","hashOfConfig":"35"},{"size":103,"mtime":1609450361587,"results":"65","hashOfConfig":"35"},{"size":572,"mtime":1609450361579,"results":"66","hashOfConfig":"35"},{"size":138,"mtime":1609450361591,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1gpijf4",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\index.tsx",[],["141","142"],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\App.tsx",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\Footer.tsx",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\Header.tsx",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\Members.tsx",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\Settings.tsx",["143"],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\AlertHistory.tsx",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\About.tsx",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\Home.tsx",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\DashBoard.tsx",["144","145"],"import React from \"react\";\r\nimport {signOutUser} from \"../../services/auth/auth\";\r\nimport index, {Line} from \"react-chartjs-2\";\r\nimport {Dropdown, DropdownButton} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport {getSensorCategories, getSensorData, getSensors} from \"../../repositories/sensorRepository\";\r\nimport CustomLine from \"../CostomLine\";\r\n\r\nclass Dashboard extends React.Component<any,{[key:string]:any}>{\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n    onSensorCategoryChange = (event: any) => {\r\n        const category:any = this.props.sensorCategories.filter((cat:any)=>cat.type==event);\r\n        this.props.getSensors(category[0]);\r\n    }\r\n\r\n    onSensorChange = (event: any ) => {\r\n        const sensor:any = this.props.sensors.filter((sen:any)=>sen.id==event);\r\n        console.log(sensor[0]);\r\n        this.fetchSensorData(this.props.from, this.props.to,sensor[0]);\r\n\r\n    }\r\n\r\n    fetchSensorData = (from:any, to:any, sensor:any) => {\r\n        if(sensor!=null) {\r\n            this.props.getSensorData(sensor, from, to);\r\n        }\r\n    }\r\n\r\n    onFromDateChange = (event: any) => {\r\n        this.fetchSensorData(event.target.value, this.props.to, this.props.selectedSensor);\r\n\r\n\r\n    }\r\n\r\n    onToDateChange = (event: any) => {\r\n        this.fetchSensorData(this.props.from,event.target.value,this.props.selectedSensor);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.sensorCategories.length==0){\r\n            this.props.getSensorCategories();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div className=\"d-flex flex-column\" id=\"content-wrapper\">\r\n            <div id=\"content\">\r\n                <div className=\"container-fluid\" style={{marginTop: \"20px\"}}>\r\n                    <div className=\"d-sm-flex justify-content-between align-items-center mb-4\">\r\n                        <h3 className=\"text-dark mb-0\">Dashboard</h3><a\r\n                        className=\"btn btn-primary btn-sm d-none d-sm-inline-block\" role=\"button\" href=\"#\"><i\r\n                        className=\"fas fa-download fa-sm text-white-50\"></i>&nbsp;Generate Report</a>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 col-xl-12\">\r\n                            <div className=\"card shadow mb-4\">\r\n                                <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col\">\r\n                                            <h6 className=\"text-primary font-weight-bold m-0\">{this.props.selectedCategory?this.props.selectedCategory.title:\"Select Sensor Category\"}</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\" style={{marginBottom: \"30px\"}}>\r\n                                        <div className=\"col\" style={{marginRight: \"10px\"}}>\r\n                                            <Dropdown onSelect={(event:any)=>this.onSensorCategoryChange(event)}>\r\n                                                <Dropdown.Toggle id=\"dropdown-basic\">\r\n                                                    {this.props.selectedCategory?this.props.selectedCategory.title:\"Select Category\"}\r\n\r\n                                                </Dropdown.Toggle>\r\n\r\n                                                <Dropdown.Menu>\r\n                                                    {this.props.sensorCategories.map((category:any, index:number) => {\r\n                                                        return <Dropdown.Item key={category.type} eventKey={category.type}>{category.title}</Dropdown.Item>\r\n                                                    })}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                        <div className=\"col\" style={{marginRight: \"10px\"}}>\r\n                                            <Dropdown onSelect={(eventKey:any, e)=>this.onSensorChange(eventKey)}>\r\n                                                <Dropdown.Toggle id=\"dropdown-basic\">\r\n                                                    {this.props.selectedSensor?this.props.selectedSensor.title:\"Select Sensor\"}\r\n                                                </Dropdown.Toggle>\r\n\r\n                                                <Dropdown.Menu>\r\n                                                    {this.props.sensors.map((sensor:any, index:number)=>{\r\n                                                        return <Dropdown.Item key={sensor.id} eventKey={sensor.id}>{sensor.title}</Dropdown.Item>\r\n                                                    })}\r\n                                                </Dropdown.Menu>\r\n                                            </Dropdown>\r\n                                        </div>\r\n                                        <div className=\"col\"\r\n                                             style={{marginRight: \"10px\", height: \"38px\",paddingTop:\" 5px\",paddingLeft: \"24px\"}}>\r\n                                            <strong>From&nbsp;</strong><input type=\"date\"\r\n                                                                              value={this.props.from}\r\n                                                                              max={this.props.to}\r\n                                                                              onChange={(e)=>this.onFromDateChange(e)}\r\n                                                                              style={{color: \"rgb(133,135,150)\",borderWidth: \"0px\",filter:\"brightness(100%) grayscale(0%) invert(0%)\"}}/>\r\n                                        </div>\r\n                                        <div className=\"col\"\r\n                                             style={{marginRight: \"10px\",paddingTop: \"5px\",paddingLeft:\"24px\"}}>\r\n                                            <strong>To&nbsp;&nbsp;</strong><input type=\"date\"\r\n                                                                                  value={this.props.to}\r\n                                                                                  onChange={(e)=>this.onToDateChange(e)}\r\n                                                                                  min={this.props.from}\r\n                                                                                  style={{color:\" rgb(133,135,150)\",borderWidth:\"0px\",filter:\" brightness(100%) grayscale(0%) invert(0%)\"}}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"chart-area mb-2\">\r\n                                        <CustomLine data={this.props.sensorData}/>\r\n                                        <canvas\r\n                                            data-bs-chart=\"{&quot;type&quot;:&quot;line&quot;,&quot;data&quot;:{&quot;labels&quot;:[&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;],&quot;datasets&quot;:[{&quot;label&quot;:&quot;Earnings&quot;,&quot;fill&quot;:true,&quot;data&quot;:[&quot;0&quot;,&quot;10000&quot;,&quot;5000&quot;,&quot;15000&quot;,&quot;10000&quot;,&quot;20000&quot;,&quot;15000&quot;,&quot;25000&quot;],&quot;backgroundColor&quot;:&quot;rgba(78, 115, 223, 0.05)&quot;,&quot;borderColor&quot;:&quot;rgba(78, 115, 223, 1)&quot;},{&quot;label&quot;:&quot;Threshold&quot;,&quot;fill&quot;:true,&quot;data&quot;:[&quot;2000&quot;,&quot;3000&quot;,&quot;8000&quot;,&quot;4500&quot;,&quot;6352&quot;,&quot;11000&quot;,&quot;50000&quot;,&quot;0&quot;,&quot;&quot;]}]},&quot;options&quot;:{&quot;maintainAspectRatio&quot;:false,&quot;legend&quot;:{&quot;display&quot;:false},&quot;title&quot;:{},&quot;scales&quot;:{&quot;xAxes&quot;:[{&quot;gridLines&quot;:{&quot;color&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;zeroLineColor&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;drawBorder&quot;:false,&quot;drawTicks&quot;:false,&quot;borderDash&quot;:[&quot;2&quot;],&quot;zeroLineBorderDash&quot;:[&quot;2&quot;],&quot;drawOnChartArea&quot;:false},&quot;ticks&quot;:{&quot;fontColor&quot;:&quot;#858796&quot;,&quot;padding&quot;:20}}],&quot;yAxes&quot;:[{&quot;gridLines&quot;:{&quot;color&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;zeroLineColor&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;drawBorder&quot;:false,&quot;drawTicks&quot;:false,&quot;borderDash&quot;:[&quot;2&quot;],&quot;zeroLineBorderDash&quot;:[&quot;2&quot;]},&quot;ticks&quot;:{&quot;fontColor&quot;:&quot;#858796&quot;,&quot;padding&quot;:20}}]}}}\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <footer className=\"bg-white sticky-footer\"></footer>\r\n        </div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state : any) => ({\r\n    sensorCategories: state.sensors.categories,\r\n    sensors: state.sensors.sensors,\r\n    sensorData: state.sensors.sensorData,\r\n    from: state.sensors.from,\r\n    to:state.sensors.to,\r\n    selectedCategory:state.sensors.selectedCategory,\r\n    selectedSensor:state.sensors.selectedSensor\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{getSensorCategories, getSensors, getSensorData})(Dashboard);\r\n","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\data-fetch\\RestAPITest.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\Sensor.tsx",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\SensorForm.tsx",["146"],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\data-fetch\\NoName.tsx",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\data-fetch\\env.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\Store.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\FirebaseApp.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\ProtectedRoutes.tsx",["147","148"],"import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {Switch} from 'react-router';\r\nimport Dashboard from \"./pages/DashBoard\";\r\nimport AlertHistory from \"./pages/AlertHistory\";\r\nimport Header from './Header';\r\n\r\nfunction ProtectedRoutes(){\r\n\r\n\r\n    return(\r\n<div id=\"page-top\">\r\n   <Header/>\r\n    <div id=\"wrapper\" className=\"pt-5\">\r\n        <Switch>\r\n            <Route\r\n                exact\r\n                path={\"/dashboard\"}\r\n                component={Dashboard}\r\n            />\r\n            <Route\r\n                exact\r\n                path={'/alertHistory'}\r\n                component={AlertHistory}\r\n                />\r\n            \r\n        </Switch>\r\n    </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoutes;\r\n\r\n{/* <Redirect\r\n                to={\"/dashboard\"}\r\n            /> */}\r\n","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\pages\\Login.tsx",["149"],"import React from \"react\";\r\nimport {userLogin} from \"../../services/auth/auth\";\r\nimport {withRouter, RouteProps} from 'react-router';\r\n\r\n\r\nclass Login extends React.Component<RouteProps,{[key:string]:any}>{\r\n    constructor(props:any) {\r\n        super(props);\r\n\r\n        this.state={\r\n            email:\"\",\r\n            password:\"\",\r\n            stayLogged:false\r\n        }\r\n    }\r\n\r\n    handleOnSubmit = (event: { preventDefault: () => void; }) => {\r\n        event.preventDefault();\r\n        userLogin(this.state.email, this.state.password, this.state.stayLogged).then(\r\n            e=>console.log(\"user logged\")).catch((e)=>alert(e));\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div className=\"bg-gradient-primary\" style={{background:\" rgb(255,145,77)\"}}>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div\r\n                        className=\"col-md-9 col-lg-12 col-xl-10 d-flex flex-column justify-content-center align-content-center align-self-center\">\r\n                        <div className=\"card shadow-lg o-hidden border-0 my-5\" style={{marginTop:\"60px\"}}>\r\n                            <div className=\"card-body p-0\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-6 col-xl-6 d-none d-lg-flex\">\r\n                                    <div className=\"flex-grow-1 bg-login-image\"\r\n                                             style={{background:\"url(/assets/img/dogs/Monitor.png) center\"}}/>\r\n                                    </div>\r\n                                    <div className=\"col-lg-6\">\r\n                                        <div className=\"p-5\">\r\n                                            <div className=\"text-center\">\r\n                                                <h4 className=\"text-dark mb-4\">Welcome Back!</h4>\r\n                                            </div>\r\n                                            <form className=\"user\" onSubmit={(e)=>this.handleOnSubmit(e)}>\r\n                                                <div className=\"form-group\"><input\r\n                                                    className=\"form-control form-control-user\" type=\"email\"\r\n                                                    id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"\r\n                                                    placeholder=\"Enter Email Address...\" name=\"email\"\r\n                                                    value={this.state.email}\r\n                                                    onChange={\r\n                                                        (event)=>this.setState({email:event.target.value})\r\n                                                    }\r\n                                                /></div>\r\n                                                <div className=\"form-group\"><input\r\n                                                    className=\"form-control form-control-user\" type=\"password\"\r\n                                                    id=\"exampleInputPassword\" placeholder=\"Password\" name=\"password\"\r\n                                                    value={this.state.password}\r\n                                                    onChange={(event)=>this.setState({password:event.target.value})}\r\n                                                />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"custom-control custom-checkbox small\">\r\n                                                        <div className=\"form-check\"><input\r\n                                                            className=\"form-check-input custom-control-input\"\r\n                                                            type=\"checkbox\" id=\"formCheck-1\"\r\n                                                                onChange={()=>this.setState({stayLogged:!this.state.stayLogged})}\r\n                                                        /><label\r\n                                                            className=\"form-check-label custom-control-label\"\r\n                                                            htmlFor=\"formCheck-1\">Remember Me</label></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <button className=\"btn btn-primary btn-block text-white btn-user\"\r\n                                                        type=\"submit\" style={{background:\" rgb(255,145,77)\"}}>Login\r\n                                                </button>\r\n                                                <hr/>\r\n                                                    <hr/>\r\n                                            </form>\r\n                                            <div className=\"text-center\"><a className=\"small\"\r\n                                                                            href=\"forgot-password.html\">Forgot\r\n                                                Password?</a></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                </div>;\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\rootReducer.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\firebaseConfig.ts",["150"],"export default {\r\n    apiKey: \"AIzaSyD7p4qs_W25Dnu7XUj354SObDrFBNagabY\",\r\n    authDomain: \"seng22212-assignment-1.firebaseapp.com\",\r\n    projectId: \"seng22212-assignment-1\",\r\n    storageBucket: \"seng22212-assignment-1.appspot.com\",\r\n    messagingSenderId: \"77647971611\",\r\n    appId: \"1:77647971611:web:8b34537460983f39867fbe\"\r\n};","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\services\\auth\\auth.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\alertHistory\\reducers.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\isLoading\\reducers.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\sensors\\reducers.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\repositories\\alertHistoryRepository.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\repositories\\sensorRepository.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\components\\CostomLine.tsx",["151"],"import React from \"react\";\r\nimport {Line} from \"react-chartjs-2\";\r\n\r\nfunction CustomLine(props:any){\r\n\r\n    const labels: any[]=[];\r\n    const dataSet: any[]=[];\r\n    const thresholdSet: any[]=[];\r\n\r\n    props.data.map((data: any, index:number)=>{\r\n        labels.push(new Date(data.capturedDate).toDateString().substr(4));\r\n        dataSet.push(data.dataValue);\r\n        thresholdSet.push(data.threshold);\r\n    })\r\n\r\n    const chartData = {\r\n        labels: labels,\r\n        datasets:[\r\n            {\r\n                label: \"Sensor Reading\",\r\n                data:dataSet,\r\n                fill:true,\r\n                borderColor:'#6200ff'\r\n            },\r\n            {\r\n                label: \"Threshold Value\",\r\n                data:thresholdSet,\r\n                fill:false,\r\n                borderColor:'#ff1a00'\r\n            }\r\n        ],\r\n        options:{\r\n            responsive:false,\r\n            maintainAspectRatio: false\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className='d-none d-md-block d-lg-none'><Line data={chartData} width={100} height={50}/></div>\r\n            <div className='d-none d-lg-block'><Line data={chartData} width={100} height={35}/></div>\r\n            <div className='d-none d-sm-block d-md-none'><Line data={chartData} width={100} height={70}/></div>\r\n            <div className='d-sm-none'><Line data={chartData} width={90} height={100}/></div>\r\n        </div>\r\n    )\r\n\r\n    // ) <Line data={chartData} height={35} width={100}/>\r\n}\r\n\r\nexport default CustomLine;\r\n","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\sensors\\actions.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\alertHistory\\actions.ts",[],"C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\services\\RestHTTP.ts",["152"],"import axios from \"axios\";\r\n\r\nconst host=\"https://api-server-t2h37jtwmq-uc.a.run.app/api\";\r\n\r\nexport default {\r\n    GET: async (endpoint:string, param:any) => {\r\n        return await axios.get(`${host}${endpoint}`,\r\n            {\r\n                params :param,\r\n                headers:{\r\n                    'Authorization': `Bearer `,\r\n                },\r\n            }\r\n        ).then( response => {\r\n            return response.data;\r\n        }).catch( error=> {\r\n            throw error;\r\n        }).catch(error => {\r\n            throw error;\r\n        })\r\n\r\n    }\r\n}","C:\\Users\\Acer\\Desktop\\design\\seng22212-assignment1-frontend\\src\\store\\isLoading\\actions.ts",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":67,"column":8,"nodeType":"159","endLine":67,"endColumn":20,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"158","line":47,"column":8,"nodeType":"159","endLine":47,"endColumn":16,"suggestions":"161"},{"ruleId":"157","severity":1,"message":"162","line":79,"column":8,"nodeType":"159","endLine":79,"endColumn":38,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":17,"column":12,"nodeType":"166","messageId":"167","endLine":17,"endColumn":16},{"ruleId":"164","severity":1,"message":"168","line":2,"column":16,"nodeType":"166","messageId":"167","endLine":2,"endColumn":24},{"ruleId":"169","severity":1,"message":"170","line":35,"column":1,"nodeType":"171","messageId":"172","endLine":37,"endColumn":19},{"ruleId":"164","severity":1,"message":"173","line":3,"column":9,"nodeType":"166","messageId":"167","endLine":3,"endColumn":19},{"ruleId":"174","severity":1,"message":"175","line":1,"column":1,"nodeType":"176","endLine":8,"endColumn":3},{"ruleId":"177","severity":1,"message":"178","line":10,"column":45,"nodeType":"179","messageId":"180","endLine":10,"endColumn":47},{"ruleId":"174","severity":1,"message":"175","line":5,"column":1,"nodeType":"176","endLine":23,"endColumn":2},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchedSensorSet' and 'getSensorSet'. Either include them or remove the dependency array.","ArrayExpression",["183"],["184"],"React Hook useEffect has missing dependencies: 'fetchedDataSet', 'getRecord', and 'sensor'. Either include them or remove the dependency array.",["185"],"@typescript-eslint/no-unused-vars","'type' is assigned a value but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'withRouter' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [fetchedSensorSet, getSensorSet, sensorType]",{"range":"192","text":"193"},"Update the dependencies array to be: [fetchedSensorSet, getSensorSet, sensor]",{"range":"194","text":"195"},"Update the dependencies array to be: [startDate, endDate, sensorId, getRecord, fetchedDataSet, sensor]",{"range":"196","text":"197"},[2448,2460],"[fetchedSensorSet, getSensorSet, sensorType]",[2098,2106],"[fetchedSensorSet, getSensorSet, sensor]",[3372,3402],"[startDate, endDate, sensorId, getRecord, fetchedDataSet, sensor]"]