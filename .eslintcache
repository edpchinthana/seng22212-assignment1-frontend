[{"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/index.tsx":"1","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/reportWebVitals.ts":"2","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/Store.ts":"3","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/App.tsx":"4","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/rootReducer.ts":"5","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/FirebaseApp.ts":"6","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/ProtectedRoutes.tsx":"7","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/common/LoadingScreen.tsx":"8","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/Login.tsx":"9","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/firebaseConfig.ts":"10","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/alertHistory/reducers.ts":"11","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/isLoading/reducers.ts":"12","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/Members.tsx":"13","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/PageNotFound.tsx":"14","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/AlertHistory.tsx":"15","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/Header.tsx":"16","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/DashBoard.tsx":"17","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/Settings.tsx":"18","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/services/auth/auth.ts":"19","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/data-fetch/RestAPITest.ts":"20","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/repositories/sensorRepository.ts":"21","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/repositories/alertHistoryRepository.ts":"22","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/Sensor.tsx":"23","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/SensorForm.tsx":"24","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/CostomLine.tsx":"25","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/data-fetch/env.ts":"26","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/isLoading/actions.ts":"27","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/alertHistory/actions.ts":"28","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/services/RestHTTP.ts":"29","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/sensors/reducers.ts":"30","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/sensors/actions.ts":"31","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/alertSubscribers/reducers.ts":"32","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/ManageSubscribers.tsx":"33","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/repositories/alertSubscribersRepository.ts":"34","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/alertSubscribers/actions.ts":"35","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/ManageSensors.tsx":"36"},{"size":775,"mtime":1609425748451,"results":"37","hashOfConfig":"38"},{"size":425,"mtime":1609178963288,"results":"39","hashOfConfig":"38"},{"size":353,"mtime":1609425748536,"results":"40","hashOfConfig":"38"},{"size":1437,"mtime":1609425748145,"results":"41","hashOfConfig":"38"},{"size":496,"mtime":1609429523638,"results":"42","hashOfConfig":"38"},{"size":179,"mtime":1609425748223,"results":"43","hashOfConfig":"38"},{"size":1974,"mtime":1609430466652,"results":"44","hashOfConfig":"38"},{"size":802,"mtime":1609427683124,"results":"45","hashOfConfig":"38"},{"size":5727,"mtime":1609427683128,"results":"46","hashOfConfig":"38"},{"size":322,"mtime":1609425748450,"results":"47","hashOfConfig":"38"},{"size":286,"mtime":1609348110229,"results":"48","hashOfConfig":"38"},{"size":330,"mtime":1609425748575,"results":"49","hashOfConfig":"38"},{"size":4342,"mtime":1609425748436,"results":"50","hashOfConfig":"38"},{"size":672,"mtime":1609425748437,"results":"51","hashOfConfig":"38"},{"size":8863,"mtime":1609429028428,"results":"52","hashOfConfig":"38"},{"size":1409,"mtime":1609430466252,"results":"53","hashOfConfig":"38"},{"size":9506,"mtime":1609425748393,"results":"54","hashOfConfig":"38"},{"size":3918,"mtime":1609425748449,"results":"55","hashOfConfig":"38"},{"size":1071,"mtime":1609425748535,"results":"56","hashOfConfig":"38"},{"size":2354,"mtime":1609326988709,"results":"57","hashOfConfig":"38"},{"size":2026,"mtime":1609430751865,"results":"58","hashOfConfig":"38"},{"size":607,"mtime":1609429163297,"results":"59","hashOfConfig":"38"},{"size":2080,"mtime":1609330769089,"results":"60","hashOfConfig":"38"},{"size":6709,"mtime":1609330769090,"results":"61","hashOfConfig":"38"},{"size":1478,"mtime":1609425748298,"results":"62","hashOfConfig":"38"},{"size":69,"mtime":1609326988710,"results":"63","hashOfConfig":"38"},{"size":131,"mtime":1609425748559,"results":"64","hashOfConfig":"38"},{"size":100,"mtime":1609322377042,"results":"65","hashOfConfig":"38"},{"size":963,"mtime":1609425748510,"results":"66","hashOfConfig":"38"},{"size":1122,"mtime":1609363622381,"results":"67","hashOfConfig":"38"},{"size":301,"mtime":1609357402519,"results":"68","hashOfConfig":"38"},{"size":300,"mtime":1609397110063,"results":"69","hashOfConfig":"38"},{"size":7602,"mtime":1609425748418,"results":"70","hashOfConfig":"38"},{"size":853,"mtime":1609425748508,"results":"71","hashOfConfig":"38"},{"size":112,"mtime":1609394204923,"results":"72","hashOfConfig":"38"},{"size":17874,"mtime":1609432461406,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"tl1gpr",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/index.tsx",[],["158","159"],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/reportWebVitals.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/Store.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/App.tsx",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/rootReducer.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/FirebaseApp.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/ProtectedRoutes.tsx",["160","161","162","163"],"import React from 'react';\nimport {Route, Redirect, Link} from 'react-router-dom';\nimport {Switch} from 'react-router';\nimport Dashboard from \"./pages/DashBoard\";\nimport AlertHistory from \"./pages/AlertHistory\";\nimport Header from './Header';\nimport {Nav} from \"react-bootstrap\";\nimport Members from \"./pages/Members\";\nimport Settings from \"./pages/Settings\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport ManageSubscribers from \"./pages/ManageSubscribers\";\nimport ManageSensors from \"./pages/ManageSensors\";\n\n\nfunction ProtectedRoutes() {\n\n\n    return (\n        <div id=\"page-top\">\n            <Header/>\n            <div id=\"wrapper\" className=\"pt-5\">\n                <Switch>\n\n                    <Route\n                        exact\n                        path={'/alertHistory'}\n                        component={AlertHistory}\n                    />\n                    <Route\n                        exact\n                        path={'/alertSubscribers'}\n                        component={ManageSubscribers}\n                    />\n                    <Route\n                        exact\n                        path={'/manageSensors'}\n                        component={ManageSensors}\n                    />\n                    <Route\n                        exact\n                        path={'/members'}\n                        component={Members}/>\n                    <Route\n                        exact\n                        path={'/settings'}\n                        component={Settings}/>\n                    <Route\n                        exact\n                        path={\"/dashboard\"}\n                        component={Dashboard}\n                    />\n                    <Route\n                        path={\"/*\"}\n                        component={PageNotFound}/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nexport default ProtectedRoutes;\n\n{/* <Redirect\n                to={\"/dashboard\"}\n            /> */\n}\n","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/common/LoadingScreen.tsx",["164"],"import React from \"react\";\nimport loading from '../../assets/images/loading.gif'\n\nconst LoadingScreen =  ()  => {\n\n    return<div id=\"content\" style={{background: \"#d95608\", position:\"absolute\",zIndex:2000, width:\"100%\"}}>\n                    <div className=\"container d-flex justify-content-center my-auto\" style={{marginTop:\" auto\"}}>\n                        <div className=\"d-flex flex-column justify-content-center align-items-center align-content-center align-self-center justify-content-xl-center align-items-xl-center\"\n    style={{height: \"100vh\"}}/>\n   \n                        <img src={loading}\n                             style={{width: \"150px\", height: \"150px\", marginTop: \"auto\", marginBottom: \"auto\"}}/>\n                    </div>\n                </div>\n\n}\n\nexport default LoadingScreen;","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/Login.tsx",["165"],"import React from \"react\";\nimport {userLogin} from \"../../services/auth/auth\";\nimport {withRouter, RouteProps} from 'react-router';\nimport Monitor from '../../assets/images/Monitor.png'\n\nclass Login extends React.Component<RouteProps,{[key:string]:any}>{\n    constructor(props:any) {\n        super(props);\n\n        this.state={\n            email:\"\",\n            password:\"\",\n            stayLogged:false\n        }\n    }\n\n    handleOnSubmit = async (event: { preventDefault: () => void; }) => {\n        event.preventDefault();\n        try {\n            console.log(\"login\")\n            await userLogin(this.state.email, this.state.password, this.state.stayLogged)\n        } catch (e) {\n            alert(e);\n        }\n    }\n\n\n    render() {\n        return <div className=\"bg-gradient-primary\" style={{background:\" rgb(255,145,77)\"}}>\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div\n                        className=\"col-md-9 col-lg-12 col-xl-10 d-flex flex-column justify-content-center align-content-center align-self-center\">\n                        <div className=\"card shadow-lg o-hidden border-0 my-5\" style={{marginTop:\"60px\"}}>\n                            <div className=\"card-body p-0\">\n                                <div className=\"row\">\n                                    <div className=\"col-lg-6 col-xl-6 d-none d-lg-flex\">\n                                        <div className=\"flex-grow-1 bg-login-image\"/>\n                                       \n                                             <img alt='logo' style={{ width: 480 }} src={Monitor} />\n                                        \n                                    </div>\n                                    <div className=\"col-lg-6\">\n                                        <div className=\"p-5\">\n                                            <div className=\"text-center\">\n                                                <h4 className=\"text-dark mb-4\">Welcome Back!</h4>\n                                            </div>\n                                            <form className=\"user\" onSubmit={(e)=>this.handleOnSubmit(e)}>\n                                                <div className=\"form-group\"><input\n                                                    className=\"form-control form-control-user\" type=\"email\"\n                                                    id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"\n                                                    placeholder=\"Enter Email Address...\" name=\"email\"\n                                                    value={this.state.email}\n                                                    onChange={\n                                                        (event)=>this.setState({email:event.target.value})\n                                                    }\n                                                /></div>\n                                                <div className=\"form-group\"><input\n                                                    className=\"form-control form-control-user\" type=\"password\"\n                                                    id=\"exampleInputPassword\" placeholder=\"Password\" name=\"password\"\n                                                    value={this.state.password}\n                                                    onChange={(event)=>this.setState({password:event.target.value})}\n                                                />\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <div className=\"custom-control custom-checkbox small\">\n                                                        <div className=\"form-check\"><input\n                                                            className=\"form-check-input custom-control-input\"\n                                                            type=\"checkbox\" id=\"formCheck-1\"\n                                                                onChange={()=>this.setState({stayLogged:!this.state.stayLogged})}\n                                                        /><label\n                                                            className=\"form-check-label custom-control-label\"\n                                                            htmlFor=\"formCheck-1\">Remember Me</label></div>\n                                                    </div>\n                                                </div>\n                                                <button className=\"btn btn-primary btn-block text-white btn-user\"\n                                                        type=\"submit\" style={{background:\" rgb(255,145,77)\"}}>Login\n                                                </button>\n                                                <hr/>\n                                                    <hr/>\n                                            </form>\n                                            <div className=\"text-center\"><a className=\"small\"\n                                                                            href=\"forgot-password.html\">Forgot\n                                                Password?</a></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n                </div>;\n    }\n}\n\nexport default Login;\n   // style={{background:\"url:(public\\assets\\img\\dogs\\Monitor.png)\"}}/>\n//     //\"url(/assets/img/dogs/Monitor.png) center\"}}/>","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/firebaseConfig.ts",["166"],"export default {\n    apiKey: \"AIzaSyD7p4qs_W25Dnu7XUj354SObDrFBNagabY\",\n    authDomain: \"seng22212-assignment-1.firebaseapp.com\",\n    projectId: \"seng22212-assignment-1\",\n    storageBucket: \"seng22212-assignment-1.appspot.com\",\n    messagingSenderId: \"77647971611\",\n    appId: \"1:77647971611:web:8b34537460983f39867fbe\"\n};","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/alertHistory/reducers.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/isLoading/reducers.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/Members.tsx",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/PageNotFound.tsx",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/AlertHistory.tsx",["167","168","169","170","171","172","173","174"],"import React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getAlertHistory } from \"../../repositories/alertHistoryRepository\";\nimport {getSensorCategories, getSensors} from \"../../repositories/sensorRepository\";\n\n\nclass AlertHistory extends React.Component<any, {[key:string]:any}> {\n\n    onSensorCategoryChange =async (event: any) => {\n        try{\n            const category:any = this.props.sensorCategories.filter((cat:any)=>cat.type==event);\n            await this.props.getSensors(category[0]);\n        }catch (e) {\n            alert(e);\n        }\n    }\n\n    fetchSensorCategories =async () => {\n        try{\n            await this.props.getSensorCategories();\n        }catch (e) {\n            alert(e);\n        }\n    }\n\n\n    onSensorChange =async (event: any ) => {\n        try{\n            const sensor:any = this.props.sensors.filter((sen:any)=>sen.id==event);\n            await this.props.getAlertHistory(sensor[0].sensorId);\n        }catch (e) {\n            alert(e);\n        }\n\n    }\n\n    componentDidMount() {\n        if(this.props.sensorCategories.length==0){\n            this.fetchSensorCategories();\n        }\n        this.props.getAlertHistory();\n    }\n\n    render() {\n\n        return <div className=\"d-flex flex-column\" id=\"content-wrapper\">\n                    <div id=\"content\">\n                        <div className=\"container-fluid\" style={{paddingTop: \"30px\"}}>\n                            <h3 className=\"text-dark mb-4\">Alert History</h3>\n                            <div className=\"card shadow\">\n                                <div className=\"card-body\">\n                                    <div className=\"row\" style={{marginBottom: \"30px\"}}>\n                                        <div className=\"col\" style={{marginRight: \"10px\"}}>\n                                            <Dropdown onSelect={(event:any)=>this.onSensorCategoryChange(event)}>\n                                                <Dropdown.Toggle id=\"dropdown-basic\">\n                                                    {this.props.selectedCategory?this.props.selectedCategory.title:\"Select Category\"}\n\n                                                </Dropdown.Toggle>\n\n                                                <Dropdown.Menu>\n                                                    {this.props.sensorCategories.map((category:any, index:number) => {\n                                                        return <Dropdown.Item key={category.type} eventKey={category.type}>{category.title}</Dropdown.Item>\n                                                    })}\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        </div>\n\n                                        <div className=\"col\" style={{marginRight: \"10px\"}}>\n                                            <Dropdown onSelect={(eventKey:any, e)=>this.onSensorChange(eventKey)}>\n                                                <Dropdown.Toggle id=\"dropdown-basic\">\n                                                    {this.props.selectedSensor?this.props.selectedSensor.title:\"Select Sensor\"}\n                                                </Dropdown.Toggle>\n\n                                                <Dropdown.Menu>\n                                                    {this.props.sensors.map((sensor:any, index:number)=>{\n                                                        return <Dropdown.Item key={sensor.id} eventKey={sensor.id}>{sensor.title}</Dropdown.Item>\n                                                    })}\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        </div>\n                                    </div>\n                                    <div className=\"table-responsive table mt-2\" id=\"dataTable\" role=\"grid\" aria-describedby=\"dataTable_info\">\n                                        <table className=\"table my-0\" id=\"dataTable\">\n                                            <thead>\n                                            <tr>\n                                                <th>Id</th>\n                                                <th>Date&nbsp;</th>\n                                                <th>Cause</th>\n                                                <th>Threshold</th>\n                                                <th>Value</th>\n                                            </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.props.alertHistory.map((alert:any, index:number)=>{\n                                                    return (\n                                                        <tr key={index}>\n                                                            <td>{alert.id}</td>\n                                                            <td>{alert.sensorData.capturedDate}</td>\n                                                            <td>{alert.cause}</td>\n                                                            <td>{alert.sensorData.threshold}</td>\n                                                            <td>{alert.sensorData.dataValue}</td>\n                                                        </tr>\n                                                    )\n                                                })}\n                                                <tr></tr>\n                                            </tbody>\n                                            <tfoot>\n                                            <tr>\n                                                <td><strong>Id</strong></td>\n                                                <td><strong>Date</strong></td>\n                                                <td><strong>Cause</strong></td>\n                                                <td><strong>Threshold</strong></td>\n                                                <td><strong>Value</strong></td>\n                                            </tr>\n                                            </tfoot>\n                                        </table>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6 align-self-center\">\n                                            <p id=\"dataTable_info\" className=\"dataTables_info\" role=\"status\" aria-live=\"polite\">Showing 1 to 10 of 27</p>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <nav className=\"d-lg-flex justify-content-lg-end dataTables_paginate paging_simple_numbers\">\n                                                <ul className=\"pagination\">\n                                                    <li className=\"page-item disabled\"><a className=\"page-link\" href=\"#\" aria-label=\"Previous\">\n                                                        <span aria-hidden=\"true\">«</span></a></li>\n                                                    <li className=\"page-item active\"><a className=\"page-link\" href=\"#\">1</a></li>\n                                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">2</a></li>\n                                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\">3</a></li>\n                                                    <li className=\"page-item\"><a className=\"page-link\" href=\"#\" aria-label=\"Next\">\n                                                        <span aria-hidden=\"true\">»</span></a></li>\n                                                </ul>\n                                            </nav>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <footer className=\"bg-white sticky-footer\">\n                        <div className=\"container my-auto\">\n                            <div className=\"text-center my-auto copyright\"><span>Copyright © Monitor 2020</span></div>\n                        </div>\n                    </footer>\n                </div>;\n\n    }\n\n}\n\nconst mapStateToProps = (state : any) => ({\n    alertHistory: state.alertHistory,\n    sensorCategories: state.sensors.categories,\n    selectedSensor: state.sensors.selectedSensor,\n    selectedCategory: state.sensors.selectedSensor,\n    sensors:state.sensors.sensors\n})\n\nexport default connect(mapStateToProps, {getAlertHistory, getSensorCategories, getSensors})(AlertHistory);\n\n","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/Header.tsx",["175"],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/DashBoard.tsx",["176","177","178","179","180","181","182","183","184"],"import React from \"react\";\nimport {signOutUser} from \"../../services/auth/auth\";\nimport index, {Line} from \"react-chartjs-2\";\nimport {Dropdown, DropdownButton} from \"react-bootstrap\";\nimport {connect} from \"react-redux\";\nimport {getSensorCategories, getSensorData, getSensors} from \"../../repositories/sensorRepository\";\nimport CustomLine from \"../CostomLine\";\n\nclass Dashboard extends React.Component<any,{[key:string]:any}>{\n\n    constructor(props: any) {\n        super(props);\n\n\n    }\n\n    onSensorCategoryChange = (event: any) => {\n        const category:any = this.props.sensorCategories.filter((cat:any)=>cat.type==event);\n        this.props.getSensors(category[0]);\n    }\n\n    onSensorChange = (event: any ) => {\n        const sensor:any = this.props.sensors.filter((sen:any)=>sen.id==event);\n        console.log(sensor[0]);\n        this.fetchSensorData(this.props.from, this.props.to,sensor[0]);\n\n    }\n\n    fetchSensorData = (from:any, to:any, sensor:any) => {\n        if(sensor!=null) {\n            this.props.getSensorData(sensor, from, to);\n        }\n    }\n\n    onFromDateChange = (event: any) => {\n        this.fetchSensorData(event.target.value, this.props.to, this.props.selectedSensor);\n\n\n    }\n\n    onToDateChange = (event: any) => {\n        this.fetchSensorData(this.props.from,event.target.value,this.props.selectedSensor);\n\n    }\n\n    componentDidMount() {\n        if(this.props.sensorCategories.length==0){\n            this.props.getSensorCategories();\n        }\n\n    }\n\n\n    render() {\n        return <div className=\"d-flex flex-column\" id=\"content-wrapper\">\n            <div id=\"content\">\n                <div className=\"container-fluid\" style={{marginTop: \"20px\"}}>\n                    <div className=\"d-sm-flex justify-content-between align-items-center mb-4\">\n                        <h3 className=\"text-dark mb-0\">Dashboard</h3><a\n                        className=\"btn btn-primary btn-sm d-none d-sm-inline-block\" role=\"button\" href=\"#\"><i\n                        className=\"fas fa-download fa-sm text-white-50\"></i>&nbsp;Generate Report</a>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-lg-12 col-xl-12\">\n                            <div className=\"card shadow mb-4\">\n                                <div className=\"card-header d-flex justify-content-between align-items-center\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <h6 className=\"text-primary font-weight-bold m-0\">{this.props.selectedCategory?this.props.selectedCategory.title:\"Select Sensor Category\"}</h6>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\" style={{marginBottom: \"30px\"}}>\n                                        <div className=\"col\" style={{marginRight: \"10px\"}}>\n                                            <Dropdown onSelect={(event:any)=>this.onSensorCategoryChange(event)}>\n                                                <Dropdown.Toggle id=\"dropdown-basic\">\n                                                    {this.props.selectedCategory?this.props.selectedCategory.title:\"Select Category\"}\n\n                                                </Dropdown.Toggle>\n\n                                                <Dropdown.Menu>\n                                                    {this.props.sensorCategories.map((category:any, index:number) => {\n                                                        return <Dropdown.Item key={category.type} eventKey={category.type}>{category.title}</Dropdown.Item>\n                                                    })}\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        </div>\n                                        <div className=\"col\" style={{marginRight: \"10px\"}}>\n                                            <Dropdown onSelect={(eventKey:any, e)=>this.onSensorChange(eventKey)}>\n                                                <Dropdown.Toggle id=\"dropdown-basic\">\n                                                    {this.props.selectedSensor?this.props.selectedSensor.title:\"Select Sensor\"}\n                                                </Dropdown.Toggle>\n\n                                                <Dropdown.Menu>\n                                                    {this.props.sensors.map((sensor:any, index:number)=>{\n                                                        return <Dropdown.Item key={sensor.id} eventKey={sensor.id}>{sensor.title}</Dropdown.Item>\n                                                    })}\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        </div>\n                                        <div className=\"col\"\n                                             style={{marginRight: \"10px\", height: \"38px\",paddingTop:\" 5px\",paddingLeft: \"24px\"}}>\n                                            <strong>From&nbsp;</strong><input type=\"date\"\n                                                                              value={this.props.from}\n                                                                              max={this.props.to}\n                                                                              onChange={(e)=>this.onFromDateChange(e)}\n                                                                              style={{color: \"rgb(133,135,150)\",borderWidth: \"0px\",filter:\"brightness(100%) grayscale(0%) invert(0%)\"}}/>\n                                        </div>\n                                        <div className=\"col\"\n                                             style={{marginRight: \"10px\",paddingTop: \"5px\",paddingLeft:\"24px\"}}>\n                                            <strong>To&nbsp;&nbsp;</strong><input type=\"date\"\n                                                                                  value={this.props.to}\n                                                                                  onChange={(e)=>this.onToDateChange(e)}\n                                                                                  min={this.props.from}\n                                                                                  style={{color:\" rgb(133,135,150)\",borderWidth:\"0px\",filter:\" brightness(100%) grayscale(0%) invert(0%)\"}}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"chart-area mb-2\">\n                                        <CustomLine data={this.props.sensorData}/>\n                                        <canvas\n                                            data-bs-chart=\"{&quot;type&quot;:&quot;line&quot;,&quot;data&quot;:{&quot;labels&quot;:[&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;],&quot;datasets&quot;:[{&quot;label&quot;:&quot;Earnings&quot;,&quot;fill&quot;:true,&quot;data&quot;:[&quot;0&quot;,&quot;10000&quot;,&quot;5000&quot;,&quot;15000&quot;,&quot;10000&quot;,&quot;20000&quot;,&quot;15000&quot;,&quot;25000&quot;],&quot;backgroundColor&quot;:&quot;rgba(78, 115, 223, 0.05)&quot;,&quot;borderColor&quot;:&quot;rgba(78, 115, 223, 1)&quot;},{&quot;label&quot;:&quot;Threshold&quot;,&quot;fill&quot;:true,&quot;data&quot;:[&quot;2000&quot;,&quot;3000&quot;,&quot;8000&quot;,&quot;4500&quot;,&quot;6352&quot;,&quot;11000&quot;,&quot;50000&quot;,&quot;0&quot;,&quot;&quot;]}]},&quot;options&quot;:{&quot;maintainAspectRatio&quot;:false,&quot;legend&quot;:{&quot;display&quot;:false},&quot;title&quot;:{},&quot;scales&quot;:{&quot;xAxes&quot;:[{&quot;gridLines&quot;:{&quot;color&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;zeroLineColor&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;drawBorder&quot;:false,&quot;drawTicks&quot;:false,&quot;borderDash&quot;:[&quot;2&quot;],&quot;zeroLineBorderDash&quot;:[&quot;2&quot;],&quot;drawOnChartArea&quot;:false},&quot;ticks&quot;:{&quot;fontColor&quot;:&quot;#858796&quot;,&quot;padding&quot;:20}}],&quot;yAxes&quot;:[{&quot;gridLines&quot;:{&quot;color&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;zeroLineColor&quot;:&quot;rgb(234, 236, 244)&quot;,&quot;drawBorder&quot;:false,&quot;drawTicks&quot;:false,&quot;borderDash&quot;:[&quot;2&quot;],&quot;zeroLineBorderDash&quot;:[&quot;2&quot;]},&quot;ticks&quot;:{&quot;fontColor&quot;:&quot;#858796&quot;,&quot;padding&quot;:20}}]}}}\"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <footer className=\"bg-white sticky-footer\"></footer>\n        </div>;\n    }\n}\n\nconst mapStateToProps = (state : any) => ({\n    sensorCategories: state.sensors.categories,\n    sensors: state.sensors.sensors,\n    sensorData: state.sensors.sensorData,\n    from: state.sensors.from,\n    to:state.sensors.to,\n    selectedCategory:state.sensors.selectedCategory,\n    selectedSensor:state.sensors.selectedSensor\n})\n\n\nexport default connect(mapStateToProps,{getSensorCategories, getSensors, getSensorData})(Dashboard);\n","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/Settings.tsx",["185"],"import React, {ChangeEvent, useEffect, useState} from 'react';\nimport {Button, Container,} from \"react-bootstrap\";\nimport {useHistory} from \"react-router-dom\";\nimport Swal from 'sweetalert2';\nimport {ISensor} from \"../../types/types\";\nimport {API} from \"../../data-fetch/RestAPITest\";\nimport Sensor from \"../Sensor\";\nimport SensorForm from \"../SensorForm\";\n\nconst Settings: React.FC = () => {\n    document.title = 'weatherApp | settings';\n    const history = useHistory();\n    const [sensorType, setSensorType] = useState('');\n    const [sensorSet, setSensorSet] = useState<ISensor[]>([]);\n    const [isAdd, setIsAdd] = useState(false);\n    const sensorCategories = JSON.parse(localStorage.getItem(\"SensorCategories\") as string) || [];\n\n    const handleSignOut = () => {\n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n                confirmButton: 'btn btn-success',\n                cancelButton: 'btn btn-danger'\n            },\n            buttonsStyling: false\n        })\n\n        swalWithBootstrapButtons.fire({\n            title: 'Are you sure to sign out?',\n            text: \"You'll need sign in to use this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, sign out me!',\n            cancelButtonText: 'No, cancel!',\n            reverseButtons: true\n        }).then((result) => {\n            if (result.isConfirmed) {\n                swalWithBootstrapButtons.fire(\n                    'Sign out!',\n                    'You have been sign out successfully.',\n                    'success'\n                )\n                localStorage.setItem('IS_LOGGED_IN', 'false');\n                history.push('/signin');\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\n                swalWithBootstrapButtons.fire(\n                    'Cancelled',\n                    'Your imaginary login is safe :)',\n                    'error'\n                )\n\n            }\n        })\n    }\n\n    let fetchedSensorSet: ISensor[];\n    const getSensorSet = async () => {\n        const r = await API.GET(`/sensor?sensorType=${sensorType.toUpperCase()}`);\n        fetchedSensorSet = r;\n        return r;\n    }\n\n    useEffect(() => {\n        getSensorSet().then(() => {\n            let sensors = fetchedSensorSet.map((sen: ISensor) => sen);\n            setSensorSet(sensors);\n        })\n    }, [sensorType])\n\n    return (\n        <Container className='min-vh-100'>\n            <br/><br/><br/>\n            <h2>Settings</h2>\n            <br/><br/>\n            <div><h3>Sensor manage</h3>\n\n                <select name=\"sensors\" id=\"sensors\"\n                        onChange={(e: ChangeEvent<HTMLSelectElement>) => setSensorType(e.target.value)}>\n                    <option value=\" \">Select Sensor category</option>\n                    {\n                        sensorCategories.map((sensorCategory: string, index:number) =>\n                            <option key={index} value={sensorCategory}>{sensorCategory}</option>)}\n                </select>\n                {\n                    sensorSet.map((sensor: ISensor, index: number) => <Sensor sensor={sensor} num={index + 1}\n                                                                              key={index}/>)\n                }\n\n            </div>\n\n<br/><br/>\n            <div><h4 onClick={() => setIsAdd(true)} style={{cursor: 'pointer'}}><i className=\"feather-plus-circle\"/> Add\n                new sensor</h4>\n                {\n                    isAdd &&\n                    <SensorForm formTitle={\"Add Sensor\"} sensor={{title: '', id: '', threshold: 0, type: '', unit: ''}}\n                                setIsUpdatable={setIsAdd}/>\n                }\n            </div>\n<br/><br/>\n         \n            <Button className='p-button mt-3' onClick={handleSignOut}>Sign out</Button>\n            <br/><br/>\n        </Container>\n    );\n}\n\nexport default Settings;\n","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/services/auth/auth.ts",["186","187"],"import FirebaseApp from \"../../FirebaseApp\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport {removeLoading, setLoading} from \"../../store/isLoading/actions\";\n\nexport const userLogin = async (email: string, password: string , stayLogged:boolean) => {\n    try{\n        if(stayLogged){\n            await FirebaseApp.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n        }else{\n            await FirebaseApp.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\n        }\n        return await FirebaseApp.auth().signInWithEmailAndPassword(email.replace(/\\s/g, '') , password.replace(/\\s/g, ''));\n    }catch (e){\n        throw e;\n    }\n}\n\nexport const signOutUser =  async () => {\n    try{\n        await FirebaseApp.auth().signOut();\n    }catch (e) {\n        throw e;\n    }\n}\n// export const getToken = async () => {\n//     return await FirebaseApp.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function(idToken) {\n//         return idToken;\n//     }).catch(function(error) {\n//         throw  error;\n//     });\n// }\n","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/data-fetch/RestAPITest.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/repositories/sensorRepository.ts",["188"],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/repositories/alertHistoryRepository.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/Sensor.tsx",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/SensorForm.tsx",["189"],"import React, {ChangeEvent, FormEvent, useState} from \"react\";\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {ISensor,} from \"../types/types\";\nimport Swal from \"sweetalert2\";\n\ntype UpdateSensorProps = {\n    sensor: ISensor;\n    formTitle: string;\n    setIsUpdatable: (arg: boolean) => void\n}\n\nconst SensorForm: React.FC<UpdateSensorProps> = (props) => {\n    const {sensor, formTitle} = props;\n    const [id, setId] = useState(sensor.id);\n    const [title, setTitle] = useState(sensor.title);\n    const [threshold, setThreshold] = useState(sensor.threshold);\n    const [type, setType] = useState(sensor.type);\n    const [unit, setUnit] = useState(sensor.unit)\n    const [validated, setValidated] = useState(false);\n    const sensorCategories = JSON.parse(localStorage.getItem(\"SensorCategories\") as string);\n\n    const handleUpdate = (event: FormEvent) => {\n        const form = event.currentTarget;\n        // @ts-ignore\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else if (title !== null && id !== null && title !== '' && id !== '') {\n            setValidated(false);\n            Swal.fire({\n                title: 'Do you want to save the changes?',\n                showDenyButton: true,\n                showCancelButton: true,\n                confirmButtonText: `Save`,\n                denyButtonText: `Don't save`,\n            }).then((result) => {\n                /* Read more about isConfirmed, isDenied below */\n                if (result.isConfirmed) {\n                    Swal.fire('Saved!', '', 'success');\n\n                    if (formTitle.split(' ')[0] === 'Add') {\n                        //TODO: add sensor function here.\n\n                    } else {\n                        //TODO: create sensor update function here\n                    }\n\n                    props.setIsUpdatable(false)\n                } else if (result.isDenied) {\n                    Swal.fire('Changes are not saved', '', 'info')\n                    props.setIsUpdatable(false)\n                }\n            })\n        } else {\n            setValidated(true);\n        }\n\n\n    };\n\n\n    return (\n        <div className=\"my-4 p-3 \"\n             style={{maxWidth: '400px', border: '1px solid gray', margin: \"auto\", borderRadius: '10px'}}>\n            <Form.Row>\n                <Col className=\"pl-1 mb-3\">\n                    <strong style={{textDecoration: 'underline'}}>{formTitle}</strong>\n\n                    <i className='feather-x-circle text-dark float-right' onClick={() => props.setIsUpdatable(false)}/>\n                </Col>\n            </Form.Row>\n            <Form noValidate validated={validated}>\n\n                <Form.Row>\n                    <Form.Group className=\"form-group-dev\">\n                        <Form.Label className=\"text-left label-text\">Title of Sensor</Form.Label>\n                        <Form.Control required type=\"text\" className=\"form-input\" placeholder=\"\"\n                                      value={title ? title : ''}\n                                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setTitle(e.target.value)}/>\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group className=\"form-group-dev\">\n                        <Form.Label className=\" label-text \">Sensor Id</Form.Label>\n                        <Form.Control className=\"form-input\" required type=\"text\" placeholder=\"\" value={id ? id : ''}\n                                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setId(e.target.value)}/>\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group className=\"form-group-dev\">\n                        <Form.Label className=\"text-left label-text\">Threshold</Form.Label>\n                        <Row>\n                            <Col xs={8} sm={8}>\n                                <Form.Control className=\"form-input\" required type=\"range\" placeholder=\"\"\n                                              value={threshold ? threshold : ''}\n                                              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setThreshold(Number(e.target.value))}/>\n                            </Col>\n                            <Col xs={4} sm={4}>\n                                <Form.Control className=\"form-input\" required type=\"text\" placeholder=\"\"\n                                              value={threshold ? threshold : ''}\n                                              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setThreshold(Number(e.target.value))}/>\n                            </Col>\n                        </Row>\n\n\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Label className=\"text-left Sensor-label\">Sensor type</Form.Label>\n                    <Form.Group controlId=\"SensorSelectID\" className=\"form-group-dev\">\n                        <br/>\n                        <select name=\"sensors\" id=\"sensors\"\n                                onChange={(e: ChangeEvent<HTMLSelectElement>) => setType(e.target.value)}>\n                            {\n                                sensorCategories.map((sensorCategory: string, index:number) =>\n                                    <option key={index} value={sensorCategory}>{sensorCategory}</option>)}\n                        </select>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group className=\"form-group-dev\">\n                        <Form.Label className=\"text-left label-text\">Sensor unit</Form.Label>\n                        <Form.Control className=\"form-input\" required type=\"text\" placeholder=\"\"\n                                      value={unit ? unit : ''}\n                                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => setUnit(e.target.value)}/>\n                        <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                    </Form.Group>\n                </Form.Row>\n                <Button onClick={event => handleUpdate(event)} size='sm' variant='success'\n                        style={{width: '100%', padding: '10px'}}>\n                    {formTitle.split(' ')[0]}\n                </Button>\n            </Form>\n        </div>\n    );\n};\nexport default SensorForm;\n","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/CostomLine.tsx",["190"],"import React from \"react\";\nimport {Line} from \"react-chartjs-2\";\n\nfunction CustomLine(props:any){\n\n    const labels: any[]=[];\n    const dataSet: any[]=[];\n    const thresholdSet: any[]=[];\n\n    props.data.map((data: any, index:number)=>{\n        labels.push(new Date(data.capturedDate).toDateString().substr(4));\n        dataSet.push(data.dataValue);\n        thresholdSet.push(data.threshold);\n    })\n\n    const chartData = {\n        labels: labels,\n        datasets:[\n            {\n                label: \"Sensor Reading\",\n                data:dataSet,\n                fill:true,\n                borderColor:'#6200ff'\n            },\n            {\n                label: \"Threshold Value\",\n                data:thresholdSet,\n                fill:false,\n                borderColor:'#ff1a00'\n            }\n        ],\n        options:{\n            responsive:false,\n            maintainAspectRatio: false\n        }\n\n    }\n\n    return(\n        <div>\n            <div className='d-none d-md-block d-lg-none'><Line data={chartData} width={100} height={50}/></div>\n            <div className='d-none d-lg-block'><Line data={chartData} width={100} height={35}/></div>\n            <div className='d-none d-sm-block d-md-none'><Line data={chartData} width={100} height={70}/></div>\n            <div className='d-sm-none'><Line data={chartData} width={90} height={100}/></div>\n        </div>\n    )\n\n    // ) <Line data={chartData} height={35} width={100}/>\n}\n\nexport default CustomLine;\n","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/data-fetch/env.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/isLoading/actions.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/alertHistory/actions.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/services/RestHTTP.ts",["191","192"],"import axios from \"axios\";\n\nconst host=\"https://api-server-t2h37jtwmq-uc.a.run.app/api\";\n\nexport default {\n\n    GET: async (endpoint:string, param:any) => {\n        return await axios.get(`${host}${endpoint}`,\n            {\n                params :param,\n                headers:{\n                    'Authorization': `Bearer `,\n                },\n            }\n        ).then( response => {\n            return response.data;\n        }).catch( error=> {\n            throw error;\n        }).catch(error => {\n            throw error;\n        })\n\n    },\n\n    POST: async (endpoint:string, data:any) => {\n        return await axios.post(`${host}${endpoint}`,\n            data,\n            {\n                headers: {\n                    'Authorization': `Bearer `,\n                    'Content-Type' : 'application/json'\n                },\n\n            }) .then((response) => {\n\n        })\n            .catch((e) => {\n                throw e\n            })\n    }\n\n}\n","/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/sensors/reducers.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/sensors/actions.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/alertSubscribers/reducers.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/ManageSubscribers.tsx",["193"],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/repositories/alertSubscribersRepository.ts",["194"],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/store/alertSubscribers/actions.ts",[],"/media/pasindu/Studies2/Studies/Software Engineering/Year 2/Semester 2/Software Architecture/Assignment/Assignment1/seng22212-assignment1-frontend/src/components/pages/ManageSensors.tsx",["195","196","197","198"],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":2,"column":16,"nodeType":"205","messageId":"206","endLine":2,"endColumn":24},{"ruleId":"203","severity":1,"message":"207","line":2,"column":26,"nodeType":"205","messageId":"206","endLine":2,"endColumn":30},{"ruleId":"203","severity":1,"message":"208","line":7,"column":9,"nodeType":"205","messageId":"206","endLine":7,"endColumn":12},{"ruleId":"209","severity":1,"message":"210","line":57,"column":1,"nodeType":"211","messageId":"212","endLine":60,"endColumn":2},{"ruleId":"213","severity":1,"message":"214","line":9,"column":25,"nodeType":"215","endLine":10,"endColumn":114},{"ruleId":"203","severity":1,"message":"216","line":3,"column":9,"nodeType":"205","messageId":"206","endLine":3,"endColumn":19},{"ruleId":"217","severity":1,"message":"218","line":1,"column":1,"nodeType":"219","endLine":8,"endColumn":3},{"ruleId":"220","severity":1,"message":"221","line":12,"column":88,"nodeType":"222","messageId":"223","endLine":12,"endColumn":90},{"ruleId":"220","severity":1,"message":"221","line":30,"column":75,"nodeType":"222","messageId":"223","endLine":30,"endColumn":77},{"ruleId":"220","severity":1,"message":"221","line":39,"column":46,"nodeType":"222","messageId":"223","endLine":39,"endColumn":48},{"ruleId":"224","severity":1,"message":"225","line":126,"column":88,"nodeType":"215","endLine":126,"endColumn":144},{"ruleId":"224","severity":1,"message":"225","line":128,"column":86,"nodeType":"215","endLine":128,"endColumn":120},{"ruleId":"224","severity":1,"message":"225","line":129,"column":79,"nodeType":"215","endLine":129,"endColumn":113},{"ruleId":"224","severity":1,"message":"225","line":130,"column":79,"nodeType":"215","endLine":130,"endColumn":113},{"ruleId":"224","severity":1,"message":"225","line":131,"column":79,"nodeType":"215","endLine":131,"endColumn":131},{"ruleId":"203","severity":1,"message":"226","line":2,"column":22,"nodeType":"205","messageId":"206","endLine":2,"endColumn":33},{"ruleId":"203","severity":1,"message":"227","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":20},{"ruleId":"203","severity":1,"message":"228","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":13},{"ruleId":"203","severity":1,"message":"229","line":3,"column":16,"nodeType":"205","messageId":"206","endLine":3,"endColumn":20},{"ruleId":"203","severity":1,"message":"230","line":4,"column":19,"nodeType":"205","messageId":"206","endLine":4,"endColumn":33},{"ruleId":"231","severity":1,"message":"232","line":11,"column":5,"nodeType":"233","messageId":"234","endLine":15,"endColumn":6},{"ruleId":"220","severity":1,"message":"221","line":18,"column":84,"nodeType":"222","messageId":"223","endLine":18,"endColumn":86},{"ruleId":"220","severity":1,"message":"221","line":23,"column":71,"nodeType":"222","messageId":"223","endLine":23,"endColumn":73},{"ruleId":"220","severity":1,"message":"221","line":47,"column":46,"nodeType":"222","messageId":"223","endLine":47,"endColumn":48},{"ruleId":"224","severity":1,"message":"225","line":59,"column":70,"nodeType":"215","endLine":60,"endColumn":108},{"ruleId":"235","severity":1,"message":"236","line":67,"column":8,"nodeType":"237","endLine":67,"endColumn":20,"suggestions":"238"},{"ruleId":"203","severity":1,"message":"239","line":4,"column":9,"nodeType":"205","messageId":"206","endLine":4,"endColumn":22},{"ruleId":"203","severity":1,"message":"240","line":4,"column":24,"nodeType":"205","messageId":"206","endLine":4,"endColumn":34},{"ruleId":"203","severity":1,"message":"241","line":45,"column":15,"nodeType":"205","messageId":"206","endLine":45,"endColumn":18},{"ruleId":"203","severity":1,"message":"242","line":17,"column":12,"nodeType":"205","messageId":"206","endLine":17,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":10,"column":45,"nodeType":"245","messageId":"246","endLine":10,"endColumn":47},{"ruleId":"217","severity":1,"message":"218","line":5,"column":1,"nodeType":"219","endLine":42,"endColumn":2},{"ruleId":"247","severity":1,"message":"248","line":26,"column":22,"nodeType":"249","messageId":"250","endLine":34,"endColumn":21,"fix":"251"},{"ruleId":"220","severity":1,"message":"221","line":18,"column":45,"nodeType":"222","messageId":"223","endLine":18,"endColumn":47},{"ruleId":"203","severity":1,"message":"241","line":25,"column":15,"nodeType":"205","messageId":"206","endLine":25,"endColumn":18},{"ruleId":"220","severity":1,"message":"221","line":17,"column":46,"nodeType":"222","messageId":"223","endLine":17,"endColumn":48},{"ruleId":"220","severity":1,"message":"221","line":34,"column":88,"nodeType":"222","messageId":"223","endLine":34,"endColumn":90},{"ruleId":"220","severity":1,"message":"221","line":43,"column":71,"nodeType":"222","messageId":"223","endLine":43,"endColumn":73},{"ruleId":"203","severity":1,"message":"252","line":73,"column":19,"nodeType":"205","messageId":"206","endLine":73,"endColumn":25},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Nav' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'withRouter' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavDropdown' is defined but never used.","'signOutUser' is defined but never used.","'index' is defined but never used.","'Line' is defined but never used.","'DropdownButton' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchedSensorSet' and 'getSensorSet'. Either include them or remove the dependency array.","ArrayExpression",["255"],"'removeLoading' is defined but never used.","'setLoading' is defined but never used.","'res' is assigned a value but never used.","'type' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"256","text":"257"},"'sensor' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},[852,854],".","Update the dependencies array to be: [fetchedSensorSet, getSensorSet, sensorType]",{"range":"260","text":"261"},[2388,2400],"[fetchedSensorSet, getSensorSet, sensorType]"]