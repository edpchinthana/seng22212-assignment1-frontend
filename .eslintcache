[{"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\index.tsx":"1","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\reportWebVitals.ts":"2","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\App.tsx":"3","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\Header.tsx":"4","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\Members.tsx":"5","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\Settings.tsx":"6","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\Home.tsx":"7","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\AlertHistory.tsx":"8","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\About.tsx":"9","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\SignUp.tsx":"10","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\Signin.tsx":"11","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\DashBoard.tsx":"12","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\Footer.tsx":"13","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\data-fetch\\RestAPITest.ts":"14","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\data-fetch\\env.ts":"15","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\data-fetch\\NoName.tsx":"16"},{"size":547,"mtime":1608265659457,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":2517,"mtime":1609216138364,"results":"20","hashOfConfig":"18"},{"size":2634,"mtime":1609223220745,"results":"21","hashOfConfig":"18"},{"size":4396,"mtime":1608769474192,"results":"22","hashOfConfig":"18"},{"size":1843,"mtime":1608738535410,"results":"23","hashOfConfig":"18"},{"size":1972,"mtime":1608362616073,"results":"24","hashOfConfig":"18"},{"size":310,"mtime":1608362616158,"results":"25","hashOfConfig":"18"},{"size":347,"mtime":1609203949007,"results":"26","hashOfConfig":"18"},{"size":4811,"mtime":1608362616164,"results":"27","hashOfConfig":"18"},{"size":4218,"mtime":1609208459547,"results":"28","hashOfConfig":"18"},{"size":4741,"mtime":1609224320145,"results":"29","hashOfConfig":"18"},{"size":326,"mtime":1608359827275,"results":"30","hashOfConfig":"18"},{"size":2441,"mtime":1609203949005,"results":"31","hashOfConfig":"18"},{"size":70,"mtime":1609203949006,"results":"32","hashOfConfig":"18"},{"size":623,"mtime":1609203949004,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"lpfsp2",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\index.tsx",[],["71","72"],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\reportWebVitals.ts",[],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\App.tsx",["73"],"import React from 'react';\nimport './App.css';\nimport Header from \"./Header\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Members from \"./pages/Members\";\nimport Settings from \"./pages/Settings\";\nimport AlertHistory from \"./pages/AlertHistory\";\nimport About from \"./pages/About\";\nimport Home from \"./pages/Home\";\nimport './aserts/style-sheets/main.scss'\nimport Signin from \"./pages/Signin\";\nimport SignUp from \"./pages/SignUp\";\nimport DashBoard from \"./pages/DashBoard\";\nimport {GuardedRoute, GuardProvider} from \"react-router-guards\";\nimport Footer from \"./Footer\";\nconst getIsLoggedIn = () => localStorage.getItem('IS_LOGGED_IN') === 'true';\n\n\nfunction App() {\n    const requireLogin = (to: any, from: any, next: any) => {\n        if (to.meta.auth) {\n            if (getIsLoggedIn()) {\n                next();\n            }\n            next.redirect('/signin');\n        } else {\n            next();\n        }\n    };\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Header/>\n                <GuardProvider guards={[requireLogin]} loading={Home} error={Signin}>\n                    <Switch>\n                        <GuardedRoute path='/about' meta={{auth: true}}>\n                            <About/>\n                        </GuardedRoute>\n                        <GuardedRoute path='/members' meta={{auth: true}}>\n                            <Members/>\n                        </GuardedRoute>\n                        <GuardedRoute path='/settings' meta={{auth: true}}>\n                            <Settings/>\n                        </GuardedRoute>\n                        <GuardedRoute path='/alert-history' meta={{auth: true}}>\n                            <AlertHistory/>\n                        </GuardedRoute>\n                        <GuardedRoute path='/signin'meta={{auth: false}}>\n                            <Signin/>\n                        </GuardedRoute>\n                        <GuardedRoute path='/signup'>\n                            <SignUp/>\n                        </GuardedRoute>\n                        <GuardedRoute path='/dashboard/:sensor' meta={{auth: true}}>\n                            <DashBoard/>\n                        </GuardedRoute>\n                        <GuardedRoute path='/'>\n                            <Home/>\n                        </GuardedRoute>\n                    </Switch>\n                </GuardProvider>\n                <Footer/>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\Header.tsx",["74","75"],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\Members.tsx",[],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\Settings.tsx",["76"],"import React from 'react';\r\nimport {Button, Col} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Settings: React.FC = () => {\r\n    document.title = 'weatherApp | settings';\r\n    const history = useHistory();\r\n\r\n    const handleSignOut = () => {\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n        })\r\n\r\n        swalWithBootstrapButtons.fire({\r\n            title: 'Are you sure to sign out?',\r\n            text: \"You'll need sign in to use this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, sign out me!',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                swalWithBootstrapButtons.fire(\r\n                    'Sign out!',\r\n                    'You have been sign out successfully.',\r\n                    'success'\r\n                )\r\n                localStorage.setItem('IS_LOGGED_IN', 'false');\r\n                history.push('/signin');\r\n            } else if (result.dismiss === Swal.DismissReason.cancel) {\r\n                swalWithBootstrapButtons.fire(\r\n                    'Cancelled',\r\n                    'Your imaginary login is safe :)',\r\n                    'error'\r\n                )\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div  className='min-vh-100'>\r\n            <br/><br/><br/>\r\n            <h2>Settings</h2>\r\n            <br/>\r\n            <Button className='p-button mt-3' onClick={handleSignOut}>Sign out</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\Home.tsx",["77","78","79","80"],"import React from 'react';\r\nimport {Carousel} from \"react-bootstrap\";\r\nimport wind from '../aserts/images/wind.jpg';\r\nimport mist from '../aserts/images/mist.jpg';\r\nimport thunder from '../aserts/images/thunder.jpg';\r\nimport measure from '../aserts/images/mesure.jpg';\r\n\r\nconst Home: React.FC = () => {\r\n    document.title = 'weatherApp | home'\r\n    return (\r\n        <div className='min-vh-100'>\r\n            <br/><br/>\r\n            <h2 className='pt-4'>Weather App 2020</h2>\r\n\r\n            <Carousel>\r\n                <Carousel.Item interval={1000}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={measure}\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Daily Temperature</h3>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item interval={500}>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={thunder}\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Daily Rain records</h3>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={wind}\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Daily wind records</h3>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100\"\r\n                        src={mist}\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Daily humidity records</h3>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\AlertHistory.tsx",[],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\About.tsx",[],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\SignUp.tsx",[],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\Signin.tsx",["81"],"import React, {FormEvent, useState} from 'react';\r\nimport {Button, CardImg, Col, Row, Form} from \"react-bootstrap\";\r\nimport image from '../aserts/images/user-icon-image.svg'\r\nimport {useHistory, Link} from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\nimport {API} from \"../data-fetch/RestAPITest\";\r\n\r\nconst Signin: React.FC = () => {\r\n    document.title = 'weatherApp | sign in'\r\n    const history = useHistory();\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isActiveUserName, setIsActiveUserName] = useState(false);\r\n    const [isActivePassword, setIsActivePassword] = useState(false);\r\n    const getIsLoggedIn = () => localStorage.getItem('IS_LOGGED_IN') === 'true';\r\n    if (getIsLoggedIn()) {\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Oops...',\r\n            text: 'You already have sign in!',\r\n            footer: `If you need to sign out, go - <a href='/settings'> settings</Link>`\r\n        })\r\n        history.push('/');\r\n    }\r\n    const handleNameOnCardChange = (text: string) => {\r\n        setUserName(text);\r\n        (text !== '') ? setIsActiveUserName(true) : setIsActiveUserName(false);\r\n    };\r\n    const handlePasswordChange = (text: string) => {\r\n        setPassword(text);\r\n        (text !== '') ? setIsActivePassword(true) : setIsActivePassword(false);\r\n    }\r\n\r\n    const handleONSubmit = (event: FormEvent) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // const getSensorCategories = async ()=>{\r\n        //     const sensorCategories= await API.GET(`/category`);\r\n        //     console.log(sensorCategories)\r\n        //     return sensorCategories;\r\n        // }\r\n        //TODO put fetched data into sensors variable.\r\n        const sensors = [\"Temperature\", \"Rain\", \"Wind\", \"Humidity\"]\r\n\r\n        //Todo: Create submit function here\r\n\r\n        if (userName === \"Padma\" && password === \"1234\") {\r\n            localStorage.setItem('IS_LOGGED_IN', 'true');\r\n            localStorage.setItem('SensorCategories',JSON.stringify(sensors))\r\n            history.push('/');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"px-2 py-3 px-md-3 py-md-5 min-vh-100\">\r\n            <br/><br/>\r\n            <Form className=\"p-form\" onSubmit={handleONSubmit}>\r\n                <h2>Sign in</h2>\r\n                <Row>\r\n                    <Col>\r\n                        <CardImg className='user-image' src={image}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"float-label my-2\">\r\n                            <input type=\"text\" value={userName}\r\n                                   onChange={(e) => handleNameOnCardChange(e.target.value)}/>\r\n                            <label className={isActiveUserName ? \"Active\" : \"\"} htmlFor=\"username\"> Username\r\n                            </label>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"float-label my-2\">\r\n                            <input type=\"text\" value={password}\r\n                                   onChange={(e) => handlePasswordChange(e.target.value)}/>\r\n                            <label className={isActivePassword ? \"Active\" : \"\"} htmlFor=\"password\">Password\r\n                            </label>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Button className='p-button mt-3' type='submit'>Sign in</Button>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Link className='float-right mb-3' to='/help-me'>Forget your password?</Link>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <span>Not a member? </span>\r\n                        <Link to='/signup'>Sign up here</Link>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Signin;\r\n","H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\pages\\DashBoard.tsx",["82","83","84","85","86","87"],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\Footer.tsx",[],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\data-fetch\\RestAPITest.ts",[],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\data-fetch\\env.ts",[],"H:\\A_Padma_Codes\\Web_Design\\A React projects\\wether-app-assignment\\src\\data-fetch\\NoName.tsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":4,"column":24,"nodeType":"94","messageId":"95","endLine":4,"endColumn":29},{"ruleId":"92","severity":1,"message":"96","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"97","line":9,"column":21,"nodeType":"94","messageId":"95","endLine":9,"endColumn":32},{"ruleId":"92","severity":1,"message":"98","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":17,"column":21,"nodeType":"101","endLine":20,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":26,"column":21,"nodeType":"101","endLine":29,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":35,"column":21,"nodeType":"101","endLine":38,"endColumn":23},{"ruleId":"99","severity":1,"message":"100","line":44,"column":21,"nodeType":"101","endLine":47,"endColumn":23},{"ruleId":"92","severity":1,"message":"102","line":38,"column":15,"nodeType":"94","messageId":"95","endLine":38,"endColumn":34},{"ruleId":"92","severity":1,"message":"103","line":19,"column":24,"nodeType":"94","messageId":"95","endLine":19,"endColumn":37},{"ruleId":"92","severity":1,"message":"104","line":20,"column":22,"nodeType":"94","messageId":"95","endLine":20,"endColumn":33},{"ruleId":"92","severity":1,"message":"105","line":21,"column":22,"nodeType":"94","messageId":"95","endLine":21,"endColumn":33},{"ruleId":"106","severity":1,"message":"107","line":37,"column":7,"nodeType":"108","endLine":37,"endColumn":15,"suggestions":"109"},{"ruleId":"92","severity":1,"message":"110","line":41,"column":11,"nodeType":"94","messageId":"95","endLine":41,"endColumn":20},{"ruleId":"92","severity":1,"message":"111","line":44,"column":9,"nodeType":"94","messageId":"95","endLine":44,"endColumn":23},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setDropdown' is assigned a value but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getSensorCategories' is assigned a value but never used.","'setSensorData' is assigned a value but never used.","'setLastRead' is assigned a value but never used.","'setSensorId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchedSensorSet' and 'getSensorSet'. Either include them or remove the dependency array.","ArrayExpression",["114"],"'getRecord' is assigned a value but never used.","'fetchedDataSet' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [fetchedSensorSet, getSensorSet, sensor]",{"range":"117","text":"118"},[1723,1731],"[fetchedSensorSet, getSensorSet, sensor]"]