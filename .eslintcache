[{"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\index.tsx":"1","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\App.tsx":"3","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\Members.tsx":"4","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\Settings.tsx":"5","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\Footer.tsx":"6","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\Header.tsx":"7","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\About.tsx":"8","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\AlertHistory.tsx":"9","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\Home.tsx":"10","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\DashBoard.tsx":"11","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\data-fetch\\RestAPITest.ts":"12","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\Sensor.tsx":"13","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\data-fetch\\NoName.tsx":"14","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\SensorForm.tsx":"15","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\data-fetch\\env.ts":"16","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\FirebaseApp.ts":"17","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\firebaseConfig.ts":"18","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\ProtectedRoutes.tsx":"19","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\Login.tsx":"20","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\services\\auth\\auth.ts":"21"},{"size":659,"mtime":1609334989100,"results":"22","hashOfConfig":"23"},{"size":440,"mtime":1609333713953,"results":"24","hashOfConfig":"23"},{"size":3802,"mtime":1609341136693,"results":"25","hashOfConfig":"23"},{"size":4414,"mtime":1609333713949,"results":"26","hashOfConfig":"23"},{"size":4021,"mtime":1609333713949,"results":"27","hashOfConfig":"23"},{"size":365,"mtime":1609333713946,"results":"28","hashOfConfig":"23"},{"size":2858,"mtime":1609333713947,"results":"29","hashOfConfig":"23"},{"size":349,"mtime":1609333713948,"results":"30","hashOfConfig":"23"},{"size":309,"mtime":1609333713948,"results":"31","hashOfConfig":"23"},{"size":2143,"mtime":1609333713948,"results":"32","hashOfConfig":"23"},{"size":5753,"mtime":1609333713948,"results":"33","hashOfConfig":"23"},{"size":2441,"mtime":1609333713951,"results":"34","hashOfConfig":"23"},{"size":2145,"mtime":1609333713947,"results":"35","hashOfConfig":"23"},{"size":654,"mtime":1609333713951,"results":"36","hashOfConfig":"23"},{"size":6852,"mtime":1609333713947,"results":"37","hashOfConfig":"23"},{"size":70,"mtime":1609333713952,"results":"38","hashOfConfig":"23"},{"size":184,"mtime":1609340357857,"results":"39","hashOfConfig":"23"},{"size":329,"mtime":1609334724449,"results":"40","hashOfConfig":"23"},{"size":758,"mtime":1609340969811,"results":"41","hashOfConfig":"23"},{"size":5513,"mtime":1609342069023,"results":"42","hashOfConfig":"23"},{"size":765,"mtime":1609339801306,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1j12i9c",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\index.tsx",[],["89","90"],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\App.tsx",["91","92","93","94","95","96","97","98"],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\Members.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\Settings.tsx",["99"],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\Footer.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\Header.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\About.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\AlertHistory.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\Home.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\DashBoard.tsx",["100","101"],"import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {Line} from \"react-chartjs-2\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport {API} from \"../../data-fetch/RestAPITest\";\r\nimport {SensorMeta, sensorRecode} from \"../../types/types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst DashBoard: React.FC = () => {\r\n    document.title = 'weatherApp | Dashboard'\r\n    let {sensor}: any = useParams();\r\n    let icon = (sensor === 'temperature') ? \"feather-thermometer\" : (sensor === \"rain\") ? \"feather-cloud-rain\" :\r\n        (sensor === 'wind') ? \"feather-wind\" : \"feather-cloud\";\r\n    let day = new Date(Date.now() - 86400000 * 40);\r\n    const [startDate, setStartDate] = useState(day.toISOString().slice(0, 10));\r\n    const [endDate, setEndDate] = useState(new Date().toISOString().slice(0, 10));\r\n    const onChangeStartHandle = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStartDate(e.target.value);\r\n    };\r\n    const onChangeEndHandle = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setEndDate(e.target.value);\r\n    };\r\n    const [sensorData, setSensorData] = useState<any>({labels: [], datasets: [], options: []});\r\n    const [lastRead, setLastRead] = useState<any>('');\r\n    const [sensorId, setSensorId] = useState<any>('');\r\n    const [sensorSet, setSensorSet] = useState<SensorMeta[]>([]);\r\n\r\n    let fetchedSensorSet: SensorMeta[];\r\n    const getSensorSet = async () => {\r\n        const r = await API.GET(`/sensor?sensorType=${sensor.toUpperCase()}`);\r\n        fetchedSensorSet = r;\r\n        return r;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSensorSet().then(() => {\r\n            let sensors = fetchedSensorSet.map((sen: SensorMeta) => sen);\r\n            setSensorSet(sensors);\r\n        })\r\n\r\n        if (sensor !== \"temperature\") {\r\n            Swal.fire('Sorry. Those type of sensors does not have setup.  ' +\r\n                'Temperature sensors only have been set up.');\r\n        } else {\r\n            Swal.fire('Please select the sensor and time range as you wish');\r\n        }\r\n    }, [sensor])\r\n\r\n    let fetchedDataSet: sensorRecode[];\r\n    const getRecord = async () => {\r\n        const r = await API.GET(`/data?sensorId=${sensorId}&from=${startDate}&to=${endDate}`);\r\n        fetchedDataSet = r;\r\n        return r\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRecord().then(() => {\r\n            let val = fetchedDataSet[fetchedDataSet.length - 1].dataValue;\r\n            let data = {\r\n                labels: fetchedDataSet.map((recode) => `${new Date(recode.capturedDate).getDate()}d-${new Date(recode.capturedDate).getHours()}:${new Date(recode.capturedDate).getMinutes()}h`),\r\n                datasets: [\r\n                    {\r\n                        label: sensor,\r\n                        data: fetchedDataSet.map((recode) => recode.dataValue),\r\n                        fill: false,\r\n                        borderColor: (sensor === 'wind') ? '#0d8c1a' : (sensor === 'temperature') ? '#ac1010' :\r\n                            (sensor === 'rain') ? '#0824b3' : '#13caaf'\r\n                    }\r\n                ],\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                }\r\n            };\r\n            setSensorData(data);\r\n            setLastRead(val);\r\n        })\r\n\r\n    }, [startDate, endDate, sensorId])\r\n\r\n    return (\r\n        <Container className='dashboard min-vh-100'>\r\n            <br/><br/>\r\n            <h2 className='pt-4 text-left'>Dashboard</h2>\r\n            <div className='p-dashboard-line'>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={4}>\r\n                        <i className={icon}/>\r\n                        <select name=\"sensors\" id=\"sensors\"\r\n                                onChange={(e: ChangeEvent<HTMLSelectElement>) => setSensorId(e.target.value)}>\r\n                            <option value=\" \">Select Sensor</option>\r\n                            {sensorSet.map((value: SensorMeta, index:number) => <option key={index} value={value.id}>{value.title}</option>)}\r\n                        </select>\r\n                    </Col>\r\n                    <Col xs={12} sm={6} md={4}>\r\n                        <span className='float-left'>From:- </span>\r\n                        <input className='float-left' type=\"date\" id=\"start-date\" name=\"start_date\"\r\n                               onChange={onChangeStartHandle}\r\n                               placeholder=\"\" value={startDate ? startDate : ''}/>\r\n                    </Col>\r\n                    <Col xs={12} sm={6} md={4}>\r\n                        <span className='float-left'> To:- </span>\r\n                        <input className='float-left' type=\"date\" id=\"end-date\" name=\"end_date\"\r\n                               onChange={onChangeEndHandle}\r\n                               placeholder=\"\" value={endDate ? endDate : ''}/>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n                <div className='float-right pr-4'>\r\n                    <span className='float-left'>Last read value - </span>\r\n                    <span className='float-left'>{lastRead}</span>\r\n                </div>\r\n            </div>\r\n            <div className='d-none d-md-block d-lg-none'><Line data={sensorData} width={100} height={50}/></div>\r\n            <div className='d-none d-lg-block'><Line data={sensorData} width={100} height={35}/></div>\r\n            <div className='d-none d-sm-block d-md-none'><Line data={sensorData} width={100} height={70}/></div>\r\n            <div className='d-sm-none'><Line data={sensorData} width={90} height={100}/></div>\r\n            <br/><br/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DashBoard;\r\n","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\data-fetch\\RestAPITest.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\Sensor.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\data-fetch\\NoName.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\SensorForm.tsx",["102"],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\data-fetch\\env.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\FirebaseApp.ts",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\firebaseConfig.ts",["103"],"export default {\r\n    apiKey: \"AIzaSyD7p4qs_W25Dnu7XUj354SObDrFBNagabY\",\r\n    authDomain: \"seng22212-assignment-1.firebaseapp.com\",\r\n    projectId: \"seng22212-assignment-1\",\r\n    storageBucket: \"seng22212-assignment-1.appspot.com\",\r\n    messagingSenderId: \"77647971611\",\r\n    appId: \"1:77647971611:web:8b34537460983f39867fbe\"\r\n};","C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\ProtectedRoutes.tsx",[],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\components\\pages\\Login.tsx",["104"],"C:\\Users\\hp\\Desktop\\seng22212-assignment1-frontend\\src\\services\\auth\\auth.ts",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":7,"column":9,"nodeType":"111","messageId":"112","endLine":7,"endColumn":22},{"ruleId":"109","severity":1,"message":"113","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":14},{"ruleId":"109","severity":1,"message":"114","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":15},{"ruleId":"109","severity":1,"message":"115","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":16},{"ruleId":"109","severity":1,"message":"116","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":20},{"ruleId":"109","severity":1,"message":"117","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":13},{"ruleId":"109","severity":1,"message":"118","line":13,"column":8,"nodeType":"111","messageId":"112","endLine":13,"endColumn":12},{"ruleId":"109","severity":1,"message":"119","line":15,"column":8,"nodeType":"111","messageId":"112","endLine":15,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":67,"column":8,"nodeType":"122","endLine":67,"endColumn":20,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"121","line":47,"column":8,"nodeType":"122","endLine":47,"endColumn":16,"suggestions":"124"},{"ruleId":"120","severity":1,"message":"125","line":79,"column":8,"nodeType":"122","endLine":79,"endColumn":38,"suggestions":"126"},{"ruleId":"109","severity":1,"message":"127","line":17,"column":12,"nodeType":"111","messageId":"112","endLine":17,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":1,"column":1,"nodeType":"130","endLine":8,"endColumn":3},{"ruleId":"109","severity":1,"message":"131","line":3,"column":9,"nodeType":"111","messageId":"112","endLine":3,"endColumn":19},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Members' is defined but never used.","'Settings' is defined but never used.","'AlertHistory' is defined but never used.","'About' is defined but never used.","'Home' is defined but never used.","'Footer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchedSensorSet' and 'getSensorSet'. Either include them or remove the dependency array.","ArrayExpression",["134"],["135"],"React Hook useEffect has missing dependencies: 'fetchedDataSet', 'getRecord', and 'sensor'. Either include them or remove the dependency array.",["136"],"'type' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [fetchedSensorSet, getSensorSet, sensorType]",{"range":"143","text":"144"},"Update the dependencies array to be: [fetchedSensorSet, getSensorSet, sensor]",{"range":"145","text":"146"},"Update the dependencies array to be: [startDate, endDate, sensorId, getRecord, fetchedDataSet, sensor]",{"range":"147","text":"148"},[2448,2460],"[fetchedSensorSet, getSensorSet, sensorType]",[2098,2106],"[fetchedSensorSet, getSensorSet, sensor]",[3372,3402],"[startDate, endDate, sensorId, getRecord, fetchedDataSet, sensor]"]